{"ast":null,"code":"'use strict';\n\nvar firebase = require('@firebase/app');\n\nvar component = require('@firebase/component');\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _a;\n\nvar ERRORS = (_a = {}, _a[\"already-activated\"\n/* ALREADY_ACTIVATED */\n] = 'You are trying to activate AppCheck for FirebaseApp {$appName}, ' + 'while it is already activated. ' + 'AppCheck can only be activated once.', _a[\"use-before-activation\"\n/* USE_BEFORE_ACTIVATION */\n] = 'AppCheck is being used before activate() is called for FirebaseApp {$appName}. ' + 'Please make sure you call activate() before instantiating other Firebase services.', _a[\"fetch-network-error\"\n/* FETCH_NETWORK_ERROR */\n] = 'Fetch failed to connect to a network. Check Internet connection. ' + 'Original error: {$originalErrorMessage}.', _a[\"fetch-parse-error\"\n/* FETCH_PARSE_ERROR */\n] = 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-status-error\"\n/* FETCH_STATUS_ERROR */\n] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.', _a[\"storage-open\"\n/* STORAGE_OPEN */\n] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.', _a[\"storage-get\"\n/* STORAGE_GET */\n] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.', _a[\"storage-set\"\n/* STORAGE_WRITE */\n] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.', _a[\"recaptcha-error\"\n/* RECAPTCHA_ERROR */\n] = 'ReCAPTCHA error.', _a);\nvar ERROR_FACTORY = new util.ErrorFactory('appCheck', 'AppCheck', ERRORS);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar APP_CHECK_STATES = new Map();\nvar DEFAULT_STATE = {\n  activated: false,\n  tokenObservers: []\n};\nvar DEBUG_STATE = {\n  enabled: false\n};\n\nfunction getState(app) {\n  return APP_CHECK_STATES.get(app) || DEFAULT_STATE;\n}\n\nfunction setState(app, state) {\n  APP_CHECK_STATES.set(app, state);\n}\n\nfunction getDebugState() {\n  return DEBUG_STATE;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getRecaptcha() {\n  return self.grecaptcha;\n}\n\nfunction ensureActivated(app) {\n  if (!getState(app).activated) {\n    throw ERROR_FACTORY.create(\"use-before-activation\"\n    /* USE_BEFORE_ACTIVATION */\n    , {\n      appName: app.name\n    });\n  }\n}\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n */\n\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECAPTCHA_URL = 'https://www.google.com/recaptcha/api.js';\n\nfunction initialize(app, siteKey) {\n  var state = getState(app);\n  var initialized = new util.Deferred();\n  setState(app, tslib.__assign(tslib.__assign({}, state), {\n    reCAPTCHAState: {\n      initialized: initialized\n    }\n  }));\n  var divId = \"fire_app_check_\" + app.name;\n  var invisibleDiv = document.createElement('div');\n  invisibleDiv.id = divId;\n  invisibleDiv.style.display = 'none';\n  document.body.appendChild(invisibleDiv);\n  var grecaptcha = getRecaptcha();\n\n  if (!grecaptcha) {\n    loadReCAPTCHAScript(function () {\n      var grecaptcha = getRecaptcha();\n\n      if (!grecaptcha) {\n        // it shouldn't happen.\n        throw new Error('no recaptcha');\n      }\n\n      grecaptcha.ready(function () {\n        // Invisible widgets allow us to set a different siteKey for each widget, so we use them to support multiple apps\n        renderInvisibleWidget(app, siteKey, grecaptcha, divId);\n        initialized.resolve(grecaptcha);\n      });\n    });\n  } else {\n    grecaptcha.ready(function () {\n      renderInvisibleWidget(app, siteKey, grecaptcha, divId);\n      initialized.resolve(grecaptcha);\n    });\n  }\n\n  return initialized.promise;\n}\n\nfunction getToken$2(app) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var reCAPTCHAState, recaptcha;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ensureActivated(app);\n          reCAPTCHAState = getState(app).reCAPTCHAState;\n          return [4\n          /*yield*/\n          , reCAPTCHAState.initialized.promise];\n\n        case 1:\n          recaptcha = _a.sent();\n          return [2\n          /*return*/\n          , new Promise(function (resolve, _reject) {\n            // Updated after initialization is complete.\n            var reCAPTCHAState = getState(app).reCAPTCHAState;\n            recaptcha.ready(function () {\n              resolve( // widgetId is guaranteed to be available if reCAPTCHAState.initialized.promise resolved.\n              recaptcha.execute(reCAPTCHAState.widgetId, {\n                action: 'fire_app_check'\n              }));\n            });\n          })];\n      }\n    });\n  });\n}\n/**\r\n *\r\n * @param app\r\n * @param container - Id of a HTML element.\r\n */\n\n\nfunction renderInvisibleWidget(app, siteKey, grecaptcha, container) {\n  var widgetId = grecaptcha.render(container, {\n    sitekey: siteKey,\n    size: 'invisible'\n  });\n  var state = getState(app);\n  setState(app, tslib.__assign(tslib.__assign({}, state), {\n    reCAPTCHAState: tslib.__assign(tslib.__assign({}, state.reCAPTCHAState), {\n      // state.reCAPTCHAState is set in the initialize()\n      widgetId: widgetId\n    })\n  }));\n}\n\nfunction loadReCAPTCHAScript(onload) {\n  var script = document.createElement('script');\n  script.src = \"\" + RECAPTCHA_URL;\n  script.onload = onload;\n  document.head.appendChild(script);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar BASE_ENDPOINT = 'https://content-firebaseappcheck.googleapis.com/v1beta';\nvar EXCHANGE_RECAPTCHA_TOKEN_METHOD = 'exchangeRecaptchaToken';\nvar EXCHANGE_DEBUG_TOKEN_METHOD = 'exchangeDebugToken';\nvar TOKEN_REFRESH_TIME = {\n  /**\r\n   * The offset time before token natural expiration to run the refresh.\r\n   * This is currently 5 minutes.\r\n   */\n  OFFSET_DURATION: 5 * 60 * 1000,\n\n  /**\r\n   * This is the first retrial wait after an error. This is currently\r\n   * 30 seconds.\r\n   */\n  RETRIAL_MIN_WAIT: 30 * 1000,\n\n  /**\r\n   * This is the maximum retrial wait, currently 16 minutes.\r\n   */\n  RETRIAL_MAX_WAIT: 16 * 60 * 1000\n};\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Port from auth proactiverefresh.js\r\n *\r\n */\n// TODO: move it to @firebase/util?\n// TODO: allow to config whether refresh should happen in the background\n\nvar Refresher =\n/** @class */\nfunction () {\n  function Refresher(operation, retryPolicy, getWaitDuration, lowerBound, upperBound) {\n    this.operation = operation;\n    this.retryPolicy = retryPolicy;\n    this.getWaitDuration = getWaitDuration;\n    this.lowerBound = lowerBound;\n    this.upperBound = upperBound;\n    this.pending = null;\n    this.nextErrorWaitInterval = lowerBound;\n\n    if (lowerBound > upperBound) {\n      throw new Error('Proactive refresh lower bound greater than upper bound!');\n    }\n  }\n\n  Refresher.prototype.start = function () {\n    this.nextErrorWaitInterval = this.lowerBound;\n    this.process(true).catch(function () {\n      /* we don't care about the result */\n    });\n  };\n\n  Refresher.prototype.stop = function () {\n    if (this.pending) {\n      this.pending.reject('cancelled');\n      this.pending = null;\n    }\n  };\n\n  Refresher.prototype.isRunning = function () {\n    return !!this.pending;\n  };\n\n  Refresher.prototype.process = function (hasSucceeded) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var error_1;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.stop();\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n\n            this.pending = new util.Deferred();\n            return [4\n            /*yield*/\n            , sleep(this.getNextRun(hasSucceeded))];\n\n          case 2:\n            _a.sent(); // Why do we resolve a promise, then immediate wait for it?\n            // We do it to make the promise chain cancellable.\n            // We can call stop() which rejects the promise before the following line execute, which makes\n            // the code jump to the catch block.\n            // TODO: unit test this\n\n\n            this.pending.resolve();\n            return [4\n            /*yield*/\n            , this.pending.promise];\n\n          case 3:\n            _a.sent();\n\n            this.pending = new util.Deferred();\n            return [4\n            /*yield*/\n            , this.operation()];\n\n          case 4:\n            _a.sent();\n\n            this.pending.resolve();\n            return [4\n            /*yield*/\n            , this.pending.promise];\n\n          case 5:\n            _a.sent();\n\n            this.process(true).catch(function () {\n              /* we don't care about the result */\n            });\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            error_1 = _a.sent();\n\n            if (this.retryPolicy(error_1)) {\n              this.process(false).catch(function () {\n                /* we don't care about the result */\n              });\n            } else {\n              this.stop();\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Refresher.prototype.getNextRun = function (hasSucceeded) {\n    if (hasSucceeded) {\n      // If last operation succeeded, reset next error wait interval and return\n      // the default wait duration.\n      this.nextErrorWaitInterval = this.lowerBound; // Return typical wait duration interval after a successful operation.\n\n      return this.getWaitDuration();\n    } else {\n      // Get next error wait interval.\n      var currentErrorWaitInterval = this.nextErrorWaitInterval; // Double interval for next consecutive error.\n\n      this.nextErrorWaitInterval *= 2; // Make sure next wait interval does not exceed the maximum upper bound.\n\n      if (this.nextErrorWaitInterval > this.upperBound) {\n        this.nextErrorWaitInterval = this.upperBound;\n      }\n\n      return currentErrorWaitInterval;\n    }\n  };\n\n  return Refresher;\n}();\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction exchangeToken(_a, platformLoggerProvider) {\n  var url = _a.url,\n      body = _a.body;\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var headers, platformLogger, options, response, originalError_1, responseBody, originalError_2, match, timeToLiveAsNumber, now;\n    return tslib.__generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          headers = {\n            'Content-Type': 'application/json'\n          };\n          platformLogger = platformLoggerProvider.getImmediate({\n            optional: true\n          });\n\n          if (platformLogger) {\n            headers['X-Firebase-Client'] = platformLogger.getPlatformInfoString();\n          }\n\n          options = {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: headers\n          };\n          _b.label = 1;\n\n        case 1:\n          _b.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , fetch(url, options)];\n\n        case 2:\n          response = _b.sent();\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          originalError_1 = _b.sent();\n          throw ERROR_FACTORY.create(\"fetch-network-error\"\n          /* FETCH_NETWORK_ERROR */\n          , {\n            originalErrorMessage: originalError_1.message\n          });\n\n        case 4:\n          if (response.status !== 200) {\n            throw ERROR_FACTORY.create(\"fetch-status-error\"\n            /* FETCH_STATUS_ERROR */\n            , {\n              httpStatus: response.status\n            });\n          }\n\n          _b.label = 5;\n\n        case 5:\n          _b.trys.push([5, 7,, 8]);\n\n          return [4\n          /*yield*/\n          , response.json()];\n\n        case 6:\n          // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n          responseBody = _b.sent();\n          return [3\n          /*break*/\n          , 8];\n\n        case 7:\n          originalError_2 = _b.sent();\n          throw ERROR_FACTORY.create(\"fetch-parse-error\"\n          /* FETCH_PARSE_ERROR */\n          , {\n            originalErrorMessage: originalError_2.message\n          });\n\n        case 8:\n          match = responseBody.ttl.match(/^([\\d.]+)(s)$/);\n\n          if (!match || !match[2] || isNaN(Number(match[1]))) {\n            throw ERROR_FACTORY.create(\"fetch-parse-error\"\n            /* FETCH_PARSE_ERROR */\n            , {\n              originalErrorMessage: \"ttl field (timeToLive) is not in standard Protobuf Duration \" + (\"format: \" + responseBody.ttl)\n            });\n          }\n\n          timeToLiveAsNumber = Number(match[1]) * 1000;\n          now = Date.now();\n          return [2\n          /*return*/\n          , {\n            token: responseBody.attestationToken,\n            expireTimeMillis: now + timeToLiveAsNumber,\n            issuedAtTimeMillis: now\n          }];\n      }\n    });\n  });\n}\n\nfunction getExchangeRecaptchaTokenRequest(app, reCAPTCHAToken) {\n  var _a = app.options,\n      projectId = _a.projectId,\n      appId = _a.appId,\n      apiKey = _a.apiKey;\n  return {\n    url: BASE_ENDPOINT + \"/projects/\" + projectId + \"/apps/\" + appId + \":\" + EXCHANGE_RECAPTCHA_TOKEN_METHOD + \"?key=\" + apiKey,\n    body: {\n      // eslint-disable-next-line\n      recaptcha_token: reCAPTCHAToken\n    }\n  };\n}\n\nfunction getExchangeDebugTokenRequest(app, debugToken) {\n  var _a = app.options,\n      projectId = _a.projectId,\n      appId = _a.appId,\n      apiKey = _a.apiKey;\n  return {\n    url: BASE_ENDPOINT + \"/projects/\" + projectId + \"/apps/\" + appId + \":\" + EXCHANGE_DEBUG_TOKEN_METHOD + \"?key=\" + apiKey,\n    body: {\n      // eslint-disable-next-line\n      debug_token: debugToken\n    }\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DB_NAME = 'firebase-app-check-database';\nvar DB_VERSION = 1;\nvar STORE_NAME = 'firebase-app-check-store';\nvar DEBUG_TOKEN_KEY = 'debug-token';\nvar dbPromise = null;\n\nfunction getDBPromise() {\n  if (dbPromise) {\n    return dbPromise;\n  }\n\n  dbPromise = new Promise(function (resolve, reject) {\n    try {\n      var request = indexedDB.open(DB_NAME, DB_VERSION);\n\n      request.onsuccess = function (event) {\n        resolve(event.target.result);\n      };\n\n      request.onerror = function (event) {\n        var _a;\n\n        reject(ERROR_FACTORY.create(\"storage-open\"\n        /* STORAGE_OPEN */\n        , {\n          originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n        }));\n      };\n\n      request.onupgradeneeded = function (event) {\n        var db = event.target.result; // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n\n        switch (event.oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME, {\n              keyPath: 'compositeKey'\n            });\n        }\n      };\n    } catch (e) {\n      reject(ERROR_FACTORY.create(\"storage-open\"\n      /* STORAGE_OPEN */\n      , {\n        originalErrorMessage: e.message\n      }));\n    }\n  });\n  return dbPromise;\n}\n\nfunction readTokenFromIndexedDB(app) {\n  return read(computeKey(app));\n}\n\nfunction writeTokenToIndexedDB(app, token) {\n  return write(computeKey(app), token);\n}\n\nfunction writeDebugTokenToIndexedDB(token) {\n  return write(DEBUG_TOKEN_KEY, token);\n}\n\nfunction readDebugTokenFromIndexedDB() {\n  return read(DEBUG_TOKEN_KEY);\n}\n\nfunction write(key, value) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var db, transaction, store, request;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , getDBPromise()];\n\n        case 1:\n          db = _a.sent();\n          transaction = db.transaction(STORE_NAME, 'readwrite');\n          store = transaction.objectStore(STORE_NAME);\n          request = store.put({\n            compositeKey: key,\n            value: value\n          });\n          return [2\n          /*return*/\n          , new Promise(function (resolve, reject) {\n            request.onsuccess = function (_event) {\n              resolve();\n            };\n\n            transaction.onerror = function (event) {\n              var _a;\n\n              reject(ERROR_FACTORY.create(\"storage-set\"\n              /* STORAGE_WRITE */\n              , {\n                originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n              }));\n            };\n          })];\n      }\n    });\n  });\n}\n\nfunction read(key) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var db, transaction, store, request;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , getDBPromise()];\n\n        case 1:\n          db = _a.sent();\n          transaction = db.transaction(STORE_NAME, 'readonly');\n          store = transaction.objectStore(STORE_NAME);\n          request = store.get(key);\n          return [2\n          /*return*/\n          , new Promise(function (resolve, reject) {\n            request.onsuccess = function (event) {\n              var result = event.target.result;\n\n              if (result) {\n                resolve(result.value);\n              } else {\n                resolve(undefined);\n              }\n            };\n\n            transaction.onerror = function (event) {\n              var _a;\n\n              reject(ERROR_FACTORY.create(\"storage-get\"\n              /* STORAGE_GET */\n              , {\n                originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n              }));\n            };\n          })];\n      }\n    });\n  });\n}\n\nfunction computeKey(app) {\n  return app.options.appId + \"-\" + app.name;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar logger = new logger$1.Logger('@firebase/app-check');\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Always resolves. In case of an error reading from indexeddb, resolve with undefined\r\n */\n\nfunction readTokenFromStorage(app) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var token, e_1;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!util.isIndexedDBAvailable()) return [3\n          /*break*/\n          , 5];\n          token = undefined;\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , readTokenFromIndexedDB(app)];\n\n        case 2:\n          token = _a.sent();\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          e_1 = _a.sent(); // swallow the error and return undefined\n\n          logger.warn(\"Failed to read token from indexeddb. Error: \" + e_1);\n          return [3\n          /*break*/\n          , 4];\n\n        case 4:\n          return [2\n          /*return*/\n          , token];\n\n        case 5:\n          return [2\n          /*return*/\n          , undefined];\n      }\n    });\n  });\n}\n/**\r\n * Always resolves. In case of an error writing to indexeddb, print a warning and resolve the promise\r\n */\n\n\nfunction writeTokenToStorage(app, token) {\n  if (util.isIndexedDBAvailable()) {\n    return writeTokenToIndexedDB(app, token).catch(function (e) {\n      // swallow the error and resolve the promise\n      logger.warn(\"Failed to write token to indexeddb. Error: \" + e);\n    });\n  }\n\n  return Promise.resolve();\n}\n\nfunction readOrCreateDebugTokenFromStorage() {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var existingDebugToken, newToken;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          existingDebugToken = undefined;\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , readDebugTokenFromIndexedDB()];\n\n        case 2:\n          existingDebugToken = _a.sent();\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 4:\n          if (!existingDebugToken) {\n            newToken = uuidv4(); // We don't need to block on writing to indexeddb\n            // In case persistence failed, a new debug token will be generated everytime the page is refreshed.\n            // It renders the debug token useless because you have to manually register(whitelist) the new token in the firebase console again and again.\n            // If you see this error trying to use debug token, it probably means you are using a browser that doesn't support indexeddb.\n            // You should switch to a different browser that supports indexeddb\n\n            writeDebugTokenToIndexedDB(newToken).catch(function (e) {\n              return logger.warn(\"Failed to persist debug token to indexeddb. Error: \" + e);\n            }); // Not using logger because I don't think we ever want this accidentally hidden?\n\n            console.log(\"AppCheck debug token: \" + newToken + \". You will need to whitelist it in the Firebase console for it to work\");\n            return [2\n            /*return*/\n            , newToken];\n          } else {\n            return [2\n            /*return*/\n            , existingDebugToken];\n          }\n\n      }\n    });\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isDebugMode() {\n  var debugState = getDebugState();\n  return debugState.enabled;\n}\n\nfunction getDebugToken() {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var state;\n    return tslib.__generator(this, function (_a) {\n      state = getDebugState();\n\n      if (state.enabled && state.token) {\n        return [2\n        /*return*/\n        , state.token.promise];\n      } else {\n        // should not happen!\n        throw Error(\"\\n            Can't get debug token in production mode.\\n        \");\n      }\n    });\n  });\n}\n\nfunction initializeDebugMode() {\n  var globals = util.getGlobal();\n\n  if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== 'string' && globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== true) {\n    return;\n  }\n\n  var debugState = getDebugState();\n  debugState.enabled = true;\n  var deferredToken = new util.Deferred();\n  debugState.token = deferredToken;\n\n  if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN === 'string') {\n    deferredToken.resolve(globals.FIREBASE_APPCHECK_DEBUG_TOKEN);\n  } else {\n    deferredToken.resolve(readOrCreateDebugTokenFromStorage());\n  }\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Initial hardcoded value agreed upon across platforms for initial launch.\n// Format left open for possible dynamic error values and other fields in the future.\n\n\nvar defaultTokenErrorData = {\n  error: 'UNKNOWN_ERROR'\n};\n/**\r\n * Stringify and base64 encode token error data.\r\n *\r\n * @param tokenError Error data, currently hardcoded.\r\n */\n\nfunction formatDummyToken(tokenErrorData) {\n  return util.base64.encodeString(JSON.stringify(tokenErrorData),\n  /* webSafe= */\n  false);\n}\n/**\r\n * This function will always resolve.\r\n * The result will contain an error field if there is any error.\r\n * In case there is an error, the token field in the result will be populated with a dummy value\r\n */\n\n\nfunction getToken$1(app, platformLoggerProvider, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var state, token, error, cachedToken, tokenFromDebugExchange, _a, _b, _c, customToken, issuedAtTimeSeconds, issuedAtTimeMillis, attestedClaimsToken, e_1, interopTokenResult;\n\n    return tslib.__generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          ensureActivated(app);\n          state = getState(app);\n          token = state.token;\n          error = undefined;\n          if (!!token) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , readTokenFromStorage(app)];\n\n        case 1:\n          cachedToken = _d.sent();\n\n          if (cachedToken && isValid(cachedToken)) {\n            token = cachedToken;\n            setState(app, tslib.__assign(tslib.__assign({}, state), {\n              token: token\n            })); // notify all listeners with the cached token\n\n            notifyTokenListeners(app, {\n              token: token.token\n            });\n          }\n\n          _d.label = 2;\n\n        case 2:\n          // Return the cached token (from either memory or indexedDB) if it's valid\n          if (!forceRefresh && token && isValid(token)) {\n            return [2\n            /*return*/\n            , {\n              token: token.token\n            }];\n          }\n\n          if (!isDebugMode()) return [3\n          /*break*/\n          , 6];\n          _a = exchangeToken;\n          _b = getExchangeDebugTokenRequest;\n          _c = [app];\n          return [4\n          /*yield*/\n          , getDebugToken()];\n\n        case 3:\n          return [4\n          /*yield*/\n          , _a.apply(void 0, [_b.apply(void 0, _c.concat([_d.sent()])), platformLoggerProvider])];\n\n        case 4:\n          tokenFromDebugExchange = _d.sent(); // Write debug token to indexedDB.\n\n          return [4\n          /*yield*/\n          , writeTokenToStorage(app, tokenFromDebugExchange)];\n\n        case 5:\n          // Write debug token to indexedDB.\n          _d.sent(); // Write debug token to state.\n\n\n          setState(app, tslib.__assign(tslib.__assign({}, state), {\n            token: tokenFromDebugExchange\n          }));\n          return [2\n          /*return*/\n          , {\n            token: tokenFromDebugExchange.token\n          }];\n\n        case 6:\n          _d.trys.push([6, 12,, 13]);\n\n          if (!state.customProvider) return [3\n          /*break*/\n          , 8];\n          return [4\n          /*yield*/\n          , state.customProvider.getToken()];\n\n        case 7:\n          customToken = _d.sent();\n          issuedAtTimeSeconds = util.issuedAtTime(customToken.token);\n          issuedAtTimeMillis = issuedAtTimeSeconds !== null && issuedAtTimeSeconds < Date.now() && issuedAtTimeSeconds > 0 ? issuedAtTimeSeconds * 1000 : Date.now();\n          token = tslib.__assign(tslib.__assign({}, customToken), {\n            issuedAtTimeMillis: issuedAtTimeMillis\n          });\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          return [4\n          /*yield*/\n          , getToken$2(app).catch(function (_e) {\n            // reCaptcha.execute() throws null which is not very descriptive.\n            throw ERROR_FACTORY.create(\"recaptcha-error\"\n            /* RECAPTCHA_ERROR */\n            );\n          })];\n\n        case 9:\n          attestedClaimsToken = _d.sent();\n          return [4\n          /*yield*/\n          , exchangeToken(getExchangeRecaptchaTokenRequest(app, attestedClaimsToken), platformLoggerProvider)];\n\n        case 10:\n          token = _d.sent();\n          _d.label = 11;\n\n        case 11:\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          e_1 = _d.sent(); // `getToken()` should never throw, but logging error text to console will aid debugging.\n\n          logger.error(e_1);\n          error = e_1;\n          return [3\n          /*break*/\n          , 13];\n\n        case 13:\n          if (!!token) return [3\n          /*break*/\n          , 14]; // if token is undefined, there must be an error.\n          // we return a dummy token along with the error\n\n          interopTokenResult = makeDummyTokenResult(error);\n          return [3\n          /*break*/\n          , 16];\n\n        case 14:\n          interopTokenResult = {\n            token: token.token\n          }; // write the new token to the memory state as well as the persistent storage.\n          // Only do it if we got a valid new token\n\n          setState(app, tslib.__assign(tslib.__assign({}, state), {\n            token: token\n          }));\n          return [4\n          /*yield*/\n          , writeTokenToStorage(app, token)];\n\n        case 15:\n          _d.sent();\n\n          _d.label = 16;\n\n        case 16:\n          notifyTokenListeners(app, interopTokenResult);\n          return [2\n          /*return*/\n          , interopTokenResult];\n      }\n    });\n  });\n}\n\nfunction addTokenListener(app, platformLoggerProvider, type, listener, onError) {\n  var state = getState(app);\n  var tokenListener = {\n    next: listener,\n    error: onError,\n    type: type\n  };\n\n  var newState = tslib.__assign(tslib.__assign({}, state), {\n    tokenObservers: tslib.__spreadArray(tslib.__spreadArray([], state.tokenObservers), [tokenListener])\n  });\n  /**\r\n   * Invoke the listener with the valid token, then start the token refresher\r\n   */\n\n\n  if (!newState.tokenRefresher) {\n    var tokenRefresher = createTokenRefresher(app, platformLoggerProvider);\n    newState.tokenRefresher = tokenRefresher;\n  } // Create the refresher but don't start it if `isTokenAutoRefreshEnabled`\n  // is not true.\n\n\n  if (!newState.tokenRefresher.isRunning() && state.isTokenAutoRefreshEnabled === true) {\n    newState.tokenRefresher.start();\n  } // invoke the listener async immediately if there is a valid token\n\n\n  if (state.token && isValid(state.token)) {\n    var validToken_1 = state.token;\n    Promise.resolve().then(function () {\n      return listener({\n        token: validToken_1.token\n      });\n    }).catch(function () {\n      /** Ignore errors in listeners. */\n    });\n  }\n\n  setState(app, newState);\n}\n\nfunction removeTokenListener(app, listener) {\n  var state = getState(app);\n  var newObservers = state.tokenObservers.filter(function (tokenObserver) {\n    return tokenObserver.next !== listener;\n  });\n\n  if (newObservers.length === 0 && state.tokenRefresher && state.tokenRefresher.isRunning()) {\n    state.tokenRefresher.stop();\n  }\n\n  setState(app, tslib.__assign(tslib.__assign({}, state), {\n    tokenObservers: newObservers\n  }));\n}\n\nfunction createTokenRefresher(app, platformLoggerProvider) {\n  var _this = this;\n\n  return new Refresher( // Keep in mind when this fails for any reason other than the ones\n  // for which we should retry, it will effectively stop the proactive refresh.\n  function () {\n    return tslib.__awaiter(_this, void 0, void 0, function () {\n      var state, result;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            state = getState(app);\n            if (!!state.token) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , getToken$1(app, platformLoggerProvider)];\n\n          case 1:\n            result = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , getToken$1(app, platformLoggerProvider, true)];\n\n          case 3:\n            result = _a.sent();\n            _a.label = 4;\n\n          case 4:\n            // getToken() always resolves. In case the result has an error field defined, it means the operation failed, and we should retry.\n            if (result.error) {\n              throw result.error;\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, function () {\n    // TODO: when should we retry?\n    return true;\n  }, function () {\n    var state = getState(app);\n\n    if (state.token) {\n      // issuedAtTime + (50% * total TTL) + 5 minutes\n      var nextRefreshTimeMillis = state.token.issuedAtTimeMillis + (state.token.expireTimeMillis - state.token.issuedAtTimeMillis) * 0.5 + 5 * 60 * 1000; // Do not allow refresh time to be past (expireTime - 5 minutes)\n\n      var latestAllowableRefresh = state.token.expireTimeMillis - 5 * 60 * 1000;\n      nextRefreshTimeMillis = Math.min(nextRefreshTimeMillis, latestAllowableRefresh);\n      return Math.max(0, nextRefreshTimeMillis - Date.now());\n    } else {\n      return 0;\n    }\n  }, TOKEN_REFRESH_TIME.RETRIAL_MIN_WAIT, TOKEN_REFRESH_TIME.RETRIAL_MAX_WAIT);\n}\n\nfunction notifyTokenListeners(app, token) {\n  var observers = getState(app).tokenObservers;\n\n  for (var _i = 0, observers_1 = observers; _i < observers_1.length; _i++) {\n    var observer = observers_1[_i];\n\n    try {\n      if (observer.type === \"EXTERNAL\"\n      /* EXTERNAL */\n      && token.error != null) {\n        // If this listener was added by a 3P call, send any token error to\n        // the supplied error handler. A 3P observer always has an error\n        // handler.\n        observer.error(token.error);\n      } else {\n        // If the token has no error field, always return the token.\n        // If this is a 2P listener, return the token, whether or not it\n        // has an error field.\n        observer.next(token);\n      }\n    } catch (ignored) {// Errors in the listener function itself are always ignored.\n    }\n  }\n}\n\nfunction isValid(token) {\n  return token.expireTimeMillis - Date.now() > 0;\n}\n\nfunction makeDummyTokenResult(error) {\n  return {\n    token: formatDummyToken(defaultTokenErrorData),\n    error: error\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @param app\r\n * @param siteKeyOrProvider - optional custom attestation provider\r\n * or reCAPTCHA siteKey\r\n * @param isTokenAutoRefreshEnabled - if true, enables auto refresh\r\n * of appCheck token.\r\n */\n\n\nfunction activate(app, siteKeyOrProvider, isTokenAutoRefreshEnabled) {\n  var state = getState(app);\n\n  if (state.activated) {\n    throw ERROR_FACTORY.create(\"already-activated\"\n    /* ALREADY_ACTIVATED */\n    , {\n      appName: app.name\n    });\n  }\n\n  var newState = tslib.__assign(tslib.__assign({}, state), {\n    activated: true\n  });\n\n  if (typeof siteKeyOrProvider === 'string') {\n    newState.siteKey = siteKeyOrProvider;\n  } else {\n    newState.customProvider = siteKeyOrProvider;\n  } // Use value of global `automaticDataCollectionEnabled` (which\n  // itself defaults to false if not specified in config) if\n  // `isTokenAutoRefreshEnabled` param was not provided by user.\n\n\n  newState.isTokenAutoRefreshEnabled = isTokenAutoRefreshEnabled === undefined ? app.automaticDataCollectionEnabled : isTokenAutoRefreshEnabled;\n  setState(app, newState); // initialize reCAPTCHA if siteKey is provided\n\n  if (newState.siteKey) {\n    initialize(app, newState.siteKey).catch(function () {\n      /* we don't care about the initialization result in activate() */\n    });\n  }\n}\n\nfunction setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled) {\n  var state = getState(app); // This will exist if any product libraries have called\n  // `addTokenListener()`\n\n  if (state.tokenRefresher) {\n    if (isTokenAutoRefreshEnabled === true) {\n      state.tokenRefresher.start();\n    } else {\n      state.tokenRefresher.stop();\n    }\n  }\n\n  setState(app, tslib.__assign(tslib.__assign({}, state), {\n    isTokenAutoRefreshEnabled: isTokenAutoRefreshEnabled\n  }));\n}\n/**\r\n * Differs from internal getToken in that it throws the error.\r\n */\n\n\nfunction getToken(app, platformLoggerProvider, forceRefresh) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var result;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , getToken$1(app, platformLoggerProvider, forceRefresh)];\n\n        case 1:\n          result = _a.sent();\n\n          if (result.error) {\n            throw result.error;\n          }\n\n          return [2\n          /*return*/\n          , {\n            token: result.token\n          }];\n      }\n    });\n  });\n}\n\nfunction onTokenChanged(app, platformLoggerProvider, onNextOrObserver, onError,\n/**\r\n * NOTE: Although an `onCompletion` callback can be provided, it will\r\n * never be called because the token stream is never-ending.\r\n * It is added only for API consistency with the observer pattern, which\r\n * we follow in JS APIs.\r\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nonCompletion) {\n  var nextFn = function () {};\n\n  var errorFn = function () {};\n\n  if (onNextOrObserver.next != null) {\n    nextFn = onNextOrObserver.next.bind(onNextOrObserver);\n  } else {\n    nextFn = onNextOrObserver;\n  }\n\n  if (onNextOrObserver.error != null) {\n    errorFn = onNextOrObserver.error.bind(onNextOrObserver);\n  } else if (onError) {\n    errorFn = onError;\n  }\n\n  addTokenListener(app, platformLoggerProvider, \"EXTERNAL\"\n  /* EXTERNAL */\n  , nextFn, errorFn);\n  return function () {\n    return removeTokenListener(app, nextFn);\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction factory(app, platformLoggerProvider) {\n  return {\n    app: app,\n    activate: function (siteKeyOrProvider, isTokenAutoRefreshEnabled) {\n      return activate(app, siteKeyOrProvider, isTokenAutoRefreshEnabled);\n    },\n    setTokenAutoRefreshEnabled: function (isTokenAutoRefreshEnabled) {\n      return setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled);\n    },\n    getToken: function (forceRefresh) {\n      return getToken(app, platformLoggerProvider, forceRefresh);\n    },\n    onTokenChanged: function (onNextOrObserver, onError, onCompletion) {\n      return onTokenChanged(app, platformLoggerProvider,\n      /**\r\n       * This can still be an observer. Need to do this casting because\r\n       * according to Typescript: \"Implementation signatures of overloads\r\n       * are not externally visible\"\r\n       */\n      onNextOrObserver, onError);\n    },\n    INTERNAL: {\n      delete: function () {\n        var tokenObservers = getState(app).tokenObservers;\n\n        for (var _i = 0, tokenObservers_1 = tokenObservers; _i < tokenObservers_1.length; _i++) {\n          var tokenObserver = tokenObservers_1[_i];\n          removeTokenListener(app, tokenObserver.next);\n        }\n\n        return Promise.resolve();\n      }\n    }\n  };\n}\n\nfunction internalFactory(app, platformLoggerProvider) {\n  return {\n    getToken: function (forceRefresh) {\n      return getToken$1(app, platformLoggerProvider, forceRefresh);\n    },\n    addTokenListener: function (listener) {\n      return addTokenListener(app, platformLoggerProvider, \"INTERNAL\"\n      /* INTERNAL */\n      , listener);\n    },\n    removeTokenListener: function (listener) {\n      return removeTokenListener(app, listener);\n    }\n  };\n}\n\nvar name = \"@firebase/app-check\";\nvar version = \"0.2.0\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar APP_CHECK_NAME = 'appCheck';\nvar APP_CHECK_NAME_INTERNAL = 'app-check-internal';\n\nfunction registerAppCheck(firebase) {\n  // The public interface\n  firebase.INTERNAL.registerComponent(new component.Component(APP_CHECK_NAME, function (container) {\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var platformLoggerProvider = container.getProvider('platform-logger');\n    return factory(app, platformLoggerProvider);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  )\n  /**\r\n   * AppCheck can only be initialized by explicitly calling firebase.appCheck()\r\n   * We don't want firebase products that consume AppCheck to gate on AppCheck\r\n   * if the user doesn't intend them to, just because the AppCheck component\r\n   * is registered.\r\n   */\n  .setInstantiationMode(\"EXPLICIT\"\n  /* EXPLICIT */\n  )\n  /**\r\n   * Because all firebase products that depend on app-check depend on app-check-internal directly,\r\n   * we need to initialize app-check-internal after app-check is initialized to make it\r\n   * available to other firebase products.\r\n   */\n  .setInstanceCreatedCallback(function (container, _instanceIdentifier, _instance) {\n    var appCheckInternalProvider = container.getProvider(APP_CHECK_NAME_INTERNAL);\n    appCheckInternalProvider.initialize();\n  })); // The internal interface used by other Firebase products\n\n  firebase.INTERNAL.registerComponent(new component.Component(APP_CHECK_NAME_INTERNAL, function (container) {\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var platformLoggerProvider = container.getProvider('platform-logger');\n    return internalFactory(app, platformLoggerProvider);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setInstantiationMode(\"EXPLICIT\"\n  /* EXPLICIT */\n  ));\n  firebase.registerVersion(name, version);\n}\n\nregisterAppCheck(firebase__default['default']);\ninitializeDebugMode();","map":{"version":3,"sources":["C:/Users/Administrator/pure-meat/User-Web-Version/User-Web-Version/node_modules/@firebase/app-check/dist/index.cjs.js"],"names":["firebase","require","component","tslib","util","logger$1","_interopDefaultLegacy","e","firebase__default","_a","ERRORS","ERROR_FACTORY","ErrorFactory","APP_CHECK_STATES","Map","DEFAULT_STATE","activated","tokenObservers","DEBUG_STATE","enabled","getState","app","get","setState","state","set","getDebugState","getRecaptcha","self","grecaptcha","ensureActivated","create","appName","name","uuidv4","replace","c","r","Math","random","v","toString","RECAPTCHA_URL","initialize","siteKey","initialized","Deferred","__assign","reCAPTCHAState","divId","invisibleDiv","document","createElement","id","style","display","body","appendChild","loadReCAPTCHAScript","Error","ready","renderInvisibleWidget","resolve","promise","getToken$2","__awaiter","recaptcha","__generator","label","sent","Promise","_reject","execute","widgetId","action","container","render","sitekey","size","onload","script","src","head","BASE_ENDPOINT","EXCHANGE_RECAPTCHA_TOKEN_METHOD","EXCHANGE_DEBUG_TOKEN_METHOD","TOKEN_REFRESH_TIME","OFFSET_DURATION","RETRIAL_MIN_WAIT","RETRIAL_MAX_WAIT","Refresher","operation","retryPolicy","getWaitDuration","lowerBound","upperBound","pending","nextErrorWaitInterval","prototype","start","process","catch","stop","reject","isRunning","hasSucceeded","error_1","trys","push","sleep","getNextRun","currentErrorWaitInterval","ms","setTimeout","exchangeToken","platformLoggerProvider","url","headers","platformLogger","options","response","originalError_1","responseBody","originalError_2","match","timeToLiveAsNumber","now","_b","getImmediate","optional","getPlatformInfoString","method","JSON","stringify","fetch","originalErrorMessage","message","status","httpStatus","json","ttl","isNaN","Number","Date","token","attestationToken","expireTimeMillis","issuedAtTimeMillis","getExchangeRecaptchaTokenRequest","reCAPTCHAToken","projectId","appId","apiKey","recaptcha_token","getExchangeDebugTokenRequest","debugToken","debug_token","DB_NAME","DB_VERSION","STORE_NAME","DEBUG_TOKEN_KEY","dbPromise","getDBPromise","request","indexedDB","open","onsuccess","event","target","result","onerror","error","onupgradeneeded","db","oldVersion","createObjectStore","keyPath","readTokenFromIndexedDB","read","computeKey","writeTokenToIndexedDB","write","writeDebugTokenToIndexedDB","readDebugTokenFromIndexedDB","key","value","transaction","store","objectStore","put","compositeKey","_event","undefined","logger","Logger","readTokenFromStorage","e_1","isIndexedDBAvailable","warn","writeTokenToStorage","readOrCreateDebugTokenFromStorage","existingDebugToken","newToken","console","log","isDebugMode","debugState","getDebugToken","initializeDebugMode","globals","getGlobal","FIREBASE_APPCHECK_DEBUG_TOKEN","deferredToken","defaultTokenErrorData","formatDummyToken","tokenErrorData","base64","encodeString","getToken$1","forceRefresh","cachedToken","tokenFromDebugExchange","_c","customToken","issuedAtTimeSeconds","attestedClaimsToken","interopTokenResult","_d","isValid","notifyTokenListeners","apply","concat","customProvider","getToken","issuedAtTime","_e","makeDummyTokenResult","addTokenListener","type","listener","onError","tokenListener","next","newState","__spreadArray","tokenRefresher","createTokenRefresher","isTokenAutoRefreshEnabled","validToken_1","then","removeTokenListener","newObservers","filter","tokenObserver","length","_this","nextRefreshTimeMillis","latestAllowableRefresh","min","max","observers","_i","observers_1","observer","ignored","activate","siteKeyOrProvider","automaticDataCollectionEnabled","setTokenAutoRefreshEnabled","onTokenChanged","onNextOrObserver","onCompletion","nextFn","errorFn","bind","factory","INTERNAL","delete","tokenObservers_1","internalFactory","version","APP_CHECK_NAME","APP_CHECK_NAME_INTERNAL","registerAppCheck","registerComponent","Component","getProvider","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","appCheckInternalProvider","registerVersion"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,gBAAD,CAAlB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,kBAAD,CAAtB;;AAEA,SAASK,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,iBAAiB,GAAG,aAAaF,qBAAqB,CAACN,QAAD,CAA1D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIS,EAAJ;;AACA,IAAIC,MAAM,IAAID,EAAE,GAAG,EAAL,EACVA,EAAE,CAAC;AAAoB;AAArB,CAAF,GAAkD,qEAC9C,iCAD8C,GAE9C,sCAHM,EAIVA,EAAE,CAAC;AAAwB;AAAzB,CAAF,GAA0D,oFACtD,oFALM,EAMVA,EAAE,CAAC;AAAsB;AAAvB,CAAF,GAAsD,sEAClD,0CAPM,EAQVA,EAAE,CAAC;AAAoB;AAArB,CAAF,GAAkD,2CAC9C,2CATM,EAUVA,EAAE,CAAC;AAAqB;AAAtB,CAAF,GAAoD,yEAV1C,EAWVA,EAAE,CAAC;AAAe;AAAhB,CAAF,GAAwC,6EAX9B,EAYVA,EAAE,CAAC;AAAc;AAAf,CAAF,GAAsC,kFAZ5B,EAaVA,EAAE,CAAC;AAAc;AAAf,CAAF,GAAwC,gFAb9B,EAcVA,EAAE,CAAC;AAAkB;AAAnB,CAAF,GAA8C,kBAdpC,EAeVA,EAfM,CAAV;AAgBA,IAAIE,aAAa,GAAG,IAAIP,IAAI,CAACQ,YAAT,CAAsB,UAAtB,EAAkC,UAAlC,EAA8CF,MAA9C,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIG,gBAAgB,GAAG,IAAIC,GAAJ,EAAvB;AACA,IAAIC,aAAa,GAAG;AAChBC,EAAAA,SAAS,EAAE,KADK;AAEhBC,EAAAA,cAAc,EAAE;AAFA,CAApB;AAIA,IAAIC,WAAW,GAAG;AACdC,EAAAA,OAAO,EAAE;AADK,CAAlB;;AAGA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,SAAOR,gBAAgB,CAACS,GAAjB,CAAqBD,GAArB,KAA6BN,aAApC;AACH;;AACD,SAASQ,QAAT,CAAkBF,GAAlB,EAAuBG,KAAvB,EAA8B;AAC1BX,EAAAA,gBAAgB,CAACY,GAAjB,CAAqBJ,GAArB,EAA0BG,KAA1B;AACH;;AACD,SAASE,aAAT,GAAyB;AACrB,SAAOR,WAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,YAAT,GAAwB;AACpB,SAAOC,IAAI,CAACC,UAAZ;AACH;;AACD,SAASC,eAAT,CAAyBT,GAAzB,EAA8B;AAC1B,MAAI,CAACD,QAAQ,CAACC,GAAD,CAAR,CAAcL,SAAnB,EAA8B;AAC1B,UAAML,aAAa,CAACoB,MAAd,CAAqB;AAAwB;AAA7C,MAA0E;AAC5EC,MAAAA,OAAO,EAAEX,GAAG,CAACY;AAD+D,KAA1E,CAAN;AAGH;AACJ;AACD;AACA;AACA;;;AACA,SAASC,MAAT,GAAkB;AACd,SAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAa;AACxE,QAAIC,CAAC,GAAIC,IAAI,CAACC,MAAL,KAAgB,EAAjB,GAAuB,CAA/B;AAAA,QAAkCC,CAAC,GAAGJ,CAAC,KAAK,GAAN,GAAYC,CAAZ,GAAiBA,CAAC,GAAG,GAAL,GAAY,GAAlE;AACA,WAAOG,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACH,GAHM,CAAP;AAIH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,aAAa,GAAG,yCAApB;;AACA,SAASC,UAAT,CAAoBtB,GAApB,EAAyBuB,OAAzB,EAAkC;AAC9B,MAAIpB,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAApB;AACA,MAAIwB,WAAW,GAAG,IAAIzC,IAAI,CAAC0C,QAAT,EAAlB;AACAvB,EAAAA,QAAQ,CAACF,GAAD,EAAMlB,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAEwB,IAAAA,cAAc,EAAE;AAAEH,MAAAA,WAAW,EAAEA;AAAf;AAAlB,GAA1C,CAAN,CAAR;AACA,MAAII,KAAK,GAAG,oBAAoB5B,GAAG,CAACY,IAApC;AACA,MAAIiB,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACAF,EAAAA,YAAY,CAACG,EAAb,GAAkBJ,KAAlB;AACAC,EAAAA,YAAY,CAACI,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACAJ,EAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,YAA1B;AACA,MAAIrB,UAAU,GAAGF,YAAY,EAA7B;;AACA,MAAI,CAACE,UAAL,EAAiB;AACb6B,IAAAA,mBAAmB,CAAC,YAAY;AAC5B,UAAI7B,UAAU,GAAGF,YAAY,EAA7B;;AACA,UAAI,CAACE,UAAL,EAAiB;AACb;AACA,cAAM,IAAI8B,KAAJ,CAAU,cAAV,CAAN;AACH;;AACD9B,MAAAA,UAAU,CAAC+B,KAAX,CAAiB,YAAY;AACzB;AACAC,QAAAA,qBAAqB,CAACxC,GAAD,EAAMuB,OAAN,EAAef,UAAf,EAA2BoB,KAA3B,CAArB;AACAJ,QAAAA,WAAW,CAACiB,OAAZ,CAAoBjC,UAApB;AACH,OAJD;AAKH,KAXkB,CAAnB;AAYH,GAbD,MAcK;AACDA,IAAAA,UAAU,CAAC+B,KAAX,CAAiB,YAAY;AACzBC,MAAAA,qBAAqB,CAACxC,GAAD,EAAMuB,OAAN,EAAef,UAAf,EAA2BoB,KAA3B,CAArB;AACAJ,MAAAA,WAAW,CAACiB,OAAZ,CAAoBjC,UAApB;AACH,KAHD;AAIH;;AACD,SAAOgB,WAAW,CAACkB,OAAnB;AACH;;AACD,SAASC,UAAT,CAAoB3C,GAApB,EAAyB;AACrB,SAAOlB,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAIjB,cAAJ,EAAoBkB,SAApB;AACA,WAAO/D,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzC,cAAQA,EAAE,CAAC2D,KAAX;AACI,aAAK,CAAL;AACItC,UAAAA,eAAe,CAACT,GAAD,CAAf;AACA2B,UAAAA,cAAc,GAAG5B,QAAQ,CAACC,GAAD,CAAR,CAAc2B,cAA/B;AACA,iBAAO,CAAC;AAAE;AAAH,YAAcA,cAAc,CAACH,WAAf,CAA2BkB,OAAzC,CAAP;;AACJ,aAAK,CAAL;AACIG,UAAAA,SAAS,GAAGzD,EAAE,CAAC4D,IAAH,EAAZ;AACA,iBAAO,CAAC;AAAE;AAAH,YAAe,IAAIC,OAAJ,CAAY,UAAUR,OAAV,EAAmBS,OAAnB,EAA4B;AACtD;AACA,gBAAIvB,cAAc,GAAG5B,QAAQ,CAACC,GAAD,CAAR,CAAc2B,cAAnC;AACAkB,YAAAA,SAAS,CAACN,KAAV,CAAgB,YAAY;AACxBE,cAAAA,OAAO,EACP;AACAI,cAAAA,SAAS,CAACM,OAAV,CAAkBxB,cAAc,CAACyB,QAAjC,EAA2C;AACvCC,gBAAAA,MAAM,EAAE;AAD+B,eAA3C,CAFO,CAAP;AAKH,aAND;AAOH,WAViB,CAAf,CAAP;AAPR;AAmBH,KApBM,CAAP;AAqBH,GAvBM,CAAP;AAwBH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASb,qBAAT,CAA+BxC,GAA/B,EAAoCuB,OAApC,EAA6Cf,UAA7C,EAAyD8C,SAAzD,EAAoE;AAChE,MAAIF,QAAQ,GAAG5C,UAAU,CAAC+C,MAAX,CAAkBD,SAAlB,EAA6B;AACxCE,IAAAA,OAAO,EAAEjC,OAD+B;AAExCkC,IAAAA,IAAI,EAAE;AAFkC,GAA7B,CAAf;AAIA,MAAItD,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAApB;AACAE,EAAAA,QAAQ,CAACF,GAAD,EAAMlB,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAEwB,IAAAA,cAAc,EAAE7C,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAK,CAACwB,cAAzB,CAAf,EAAyD;AAAE;AAC7HyB,MAAAA,QAAQ,EAAEA;AADiH,KAAzD;AAAlB,GAA1C,CAAN,CAAR;AAEH;;AACD,SAASf,mBAAT,CAA6BqB,MAA7B,EAAqC;AACjC,MAAIC,MAAM,GAAG7B,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACA4B,EAAAA,MAAM,CAACC,GAAP,GAAa,KAAKvC,aAAlB;AACAsC,EAAAA,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AACA5B,EAAAA,QAAQ,CAAC+B,IAAT,CAAczB,WAAd,CAA0BuB,MAA1B;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,aAAa,GAAG,wDAApB;AACA,IAAIC,+BAA+B,GAAG,wBAAtC;AACA,IAAIC,2BAA2B,GAAG,oBAAlC;AACA,IAAIC,kBAAkB,GAAG;AACrB;AACJ;AACA;AACA;AACIC,EAAAA,eAAe,EAAE,IAAI,EAAJ,GAAS,IALL;;AAMrB;AACJ;AACA;AACA;AACIC,EAAAA,gBAAgB,EAAE,KAAK,IAVF;;AAWrB;AACJ;AACA;AACIC,EAAAA,gBAAgB,EAAE,KAAK,EAAL,GAAU;AAdP,CAAzB;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,eAA3C,EAA4DC,UAA5D,EAAwEC,UAAxE,EAAoF;AAChF,SAAKJ,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,qBAAL,GAA6BH,UAA7B;;AACA,QAAIA,UAAU,GAAGC,UAAjB,EAA6B;AACzB,YAAM,IAAIpC,KAAJ,CAAU,yDAAV,CAAN;AACH;AACJ;;AACD+B,EAAAA,SAAS,CAACQ,SAAV,CAAoBC,KAApB,GAA4B,YAAY;AACpC,SAAKF,qBAAL,GAA6B,KAAKH,UAAlC;AACA,SAAKM,OAAL,CAAa,IAAb,EAAmBC,KAAnB,CAAyB,YAAY;AACjC;AACH,KAFD;AAGH,GALD;;AAMAX,EAAAA,SAAS,CAACQ,SAAV,CAAoBI,IAApB,GAA2B,YAAY;AACnC,QAAI,KAAKN,OAAT,EAAkB;AACd,WAAKA,OAAL,CAAaO,MAAb,CAAoB,WAApB;AACA,WAAKP,OAAL,GAAe,IAAf;AACH;AACJ,GALD;;AAMAN,EAAAA,SAAS,CAACQ,SAAV,CAAoBM,SAApB,GAAgC,YAAY;AACxC,WAAO,CAAC,CAAC,KAAKR,OAAd;AACH,GAFD;;AAGAN,EAAAA,SAAS,CAACQ,SAAV,CAAoBE,OAApB,GAA8B,UAAUK,YAAV,EAAwB;AAClD,WAAOtG,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,UAAIyC,OAAJ;AACA,aAAOvG,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzC,gBAAQA,EAAE,CAAC2D,KAAX;AACI,eAAK,CAAL;AACI,iBAAKkC,IAAL;AACA7F,YAAAA,EAAE,CAAC2D,KAAH,GAAW,CAAX;;AACJ,eAAK,CAAL;AACI3D,YAAAA,EAAE,CAACkG,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;AACA,iBAAKZ,OAAL,GAAe,IAAI5F,IAAI,CAAC0C,QAAT,EAAf;AACA,mBAAO,CAAC;AAAE;AAAH,cAAc+D,KAAK,CAAC,KAAKC,UAAL,CAAgBL,YAAhB,CAAD,CAAnB,CAAP;;AACJ,eAAK,CAAL;AACIhG,YAAAA,EAAE,CAAC4D,IAAH,GADJ,CAEI;AACA;AACA;AACA;AACA;;;AACA,iBAAK2B,OAAL,CAAalC,OAAb;AACA,mBAAO,CAAC;AAAE;AAAH,cAAc,KAAKkC,OAAL,CAAajC,OAA3B,CAAP;;AACJ,eAAK,CAAL;AACItD,YAAAA,EAAE,CAAC4D,IAAH;;AACA,iBAAK2B,OAAL,GAAe,IAAI5F,IAAI,CAAC0C,QAAT,EAAf;AACA,mBAAO,CAAC;AAAE;AAAH,cAAc,KAAK6C,SAAL,EAAd,CAAP;;AACJ,eAAK,CAAL;AACIlF,YAAAA,EAAE,CAAC4D,IAAH;;AACA,iBAAK2B,OAAL,CAAalC,OAAb;AACA,mBAAO,CAAC;AAAE;AAAH,cAAc,KAAKkC,OAAL,CAAajC,OAA3B,CAAP;;AACJ,eAAK,CAAL;AACItD,YAAAA,EAAE,CAAC4D,IAAH;;AACA,iBAAK+B,OAAL,CAAa,IAAb,EAAmBC,KAAnB,CAAyB,YAAY;AACjC;AACH,aAFD;AAGA,mBAAO,CAAC;AAAE;AAAH,cAAc,CAAd,CAAP;;AACJ,eAAK,CAAL;AACIK,YAAAA,OAAO,GAAGjG,EAAE,CAAC4D,IAAH,EAAV;;AACA,gBAAI,KAAKuB,WAAL,CAAiBc,OAAjB,CAAJ,EAA+B;AAC3B,mBAAKN,OAAL,CAAa,KAAb,EAAoBC,KAApB,CAA0B,YAAY;AAClC;AACH,eAFD;AAGH,aAJD,MAKK;AACD,mBAAKC,IAAL;AACH;;AACD,mBAAO,CAAC;AAAE;AAAH,cAAc,CAAd,CAAP;;AACJ,eAAK,CAAL;AAAQ,mBAAO,CAAC;AAAE;AAAH,aAAP;AA1CZ;AA4CH,OA7CM,CAAP;AA8CH,KAhDM,CAAP;AAiDH,GAlDD;;AAmDAZ,EAAAA,SAAS,CAACQ,SAAV,CAAoBY,UAApB,GAAiC,UAAUL,YAAV,EAAwB;AACrD,QAAIA,YAAJ,EAAkB;AACd;AACA;AACA,WAAKR,qBAAL,GAA6B,KAAKH,UAAlC,CAHc,CAId;;AACA,aAAO,KAAKD,eAAL,EAAP;AACH,KAND,MAOK;AACD;AACA,UAAIkB,wBAAwB,GAAG,KAAKd,qBAApC,CAFC,CAGD;;AACA,WAAKA,qBAAL,IAA8B,CAA9B,CAJC,CAKD;;AACA,UAAI,KAAKA,qBAAL,GAA6B,KAAKF,UAAtC,EAAkD;AAC9C,aAAKE,qBAAL,GAA6B,KAAKF,UAAlC;AACH;;AACD,aAAOgB,wBAAP;AACH;AACJ,GAnBD;;AAoBA,SAAOrB,SAAP;AACH,CApG8B,EAA/B;;AAqGA,SAASmB,KAAT,CAAeG,EAAf,EAAmB;AACf,SAAO,IAAI1C,OAAJ,CAAY,UAAUR,OAAV,EAAmB;AAClCmD,IAAAA,UAAU,CAACnD,OAAD,EAAUkD,EAAV,CAAV;AACH,GAFM,CAAP;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,aAAT,CAAuBzG,EAAvB,EAA2B0G,sBAA3B,EAAmD;AAC/C,MAAIC,GAAG,GAAG3G,EAAE,CAAC2G,GAAb;AAAA,MAAkB5D,IAAI,GAAG/C,EAAE,CAAC+C,IAA5B;AACA,SAAOrD,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAIoD,OAAJ,EAAaC,cAAb,EAA6BC,OAA7B,EAAsCC,QAAtC,EAAgDC,eAAhD,EAAiEC,YAAjE,EAA+EC,eAA/E,EAAgGC,KAAhG,EAAuGC,kBAAvG,EAA2HC,GAA3H;AACA,WAAO3H,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU4D,EAAV,EAAc;AACzC,cAAQA,EAAE,CAAC3D,KAAX;AACI,aAAK,CAAL;AACIiD,UAAAA,OAAO,GAAG;AACN,4BAAgB;AADV,WAAV;AAGAC,UAAAA,cAAc,GAAGH,sBAAsB,CAACa,YAAvB,CAAoC;AACjDC,YAAAA,QAAQ,EAAE;AADuC,WAApC,CAAjB;;AAGA,cAAIX,cAAJ,EAAoB;AAChBD,YAAAA,OAAO,CAAC,mBAAD,CAAP,GAA+BC,cAAc,CAACY,qBAAf,EAA/B;AACH;;AACDX,UAAAA,OAAO,GAAG;AACNY,YAAAA,MAAM,EAAE,MADF;AAEN3E,YAAAA,IAAI,EAAE4E,IAAI,CAACC,SAAL,CAAe7E,IAAf,CAFA;AAGN6D,YAAAA,OAAO,EAAEA;AAHH,WAAV;AAKAU,UAAAA,EAAE,CAAC3D,KAAH,GAAW,CAAX;;AACJ,aAAK,CAAL;AACI2D,UAAAA,EAAE,CAACpB,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc0B,KAAK,CAAClB,GAAD,EAAMG,OAAN,CAAnB,CAAP;;AACJ,aAAK,CAAL;AACIC,UAAAA,QAAQ,GAAGO,EAAE,CAAC1D,IAAH,EAAX;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;;AACJ,aAAK,CAAL;AACIoD,UAAAA,eAAe,GAAGM,EAAE,CAAC1D,IAAH,EAAlB;AACA,gBAAM1D,aAAa,CAACoB,MAAd,CAAqB;AAAsB;AAA3C,YAAsE;AACxEwG,YAAAA,oBAAoB,EAAEd,eAAe,CAACe;AADkC,WAAtE,CAAN;;AAGJ,aAAK,CAAL;AACI,cAAIhB,QAAQ,CAACiB,MAAT,KAAoB,GAAxB,EAA6B;AACzB,kBAAM9H,aAAa,CAACoB,MAAd,CAAqB;AAAqB;AAA1C,cAAoE;AACtE2G,cAAAA,UAAU,EAAElB,QAAQ,CAACiB;AADiD,aAApE,CAAN;AAGH;;AACDV,UAAAA,EAAE,CAAC3D,KAAH,GAAW,CAAX;;AACJ,aAAK,CAAL;AACI2D,UAAAA,EAAE,CAACpB,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;AACA,iBAAO,CAAC;AAAE;AAAH,YAAcY,QAAQ,CAACmB,IAAT,EAAd,CAAP;;AACJ,aAAK,CAAL;AACI;AACAjB,UAAAA,YAAY,GAAGK,EAAE,CAAC1D,IAAH,EAAf;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;;AACJ,aAAK,CAAL;AACIsD,UAAAA,eAAe,GAAGI,EAAE,CAAC1D,IAAH,EAAlB;AACA,gBAAM1D,aAAa,CAACoB,MAAd,CAAqB;AAAoB;AAAzC,YAAkE;AACpEwG,YAAAA,oBAAoB,EAAEZ,eAAe,CAACa;AAD8B,WAAlE,CAAN;;AAGJ,aAAK,CAAL;AACIZ,UAAAA,KAAK,GAAGF,YAAY,CAACkB,GAAb,CAAiBhB,KAAjB,CAAuB,eAAvB,CAAR;;AACA,cAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAAC,CAAD,CAAhB,IAAuBiB,KAAK,CAACC,MAAM,CAAClB,KAAK,CAAC,CAAD,CAAN,CAAP,CAAhC,EAAoD;AAChD,kBAAMjH,aAAa,CAACoB,MAAd,CAAqB;AAAoB;AAAzC,cAAkE;AACpEwG,cAAAA,oBAAoB,EAAE,kEACjB,aAAab,YAAY,CAACkB,GADT;AAD8C,aAAlE,CAAN;AAIH;;AACDf,UAAAA,kBAAkB,GAAGiB,MAAM,CAAClB,KAAK,CAAC,CAAD,CAAN,CAAN,GAAmB,IAAxC;AACAE,UAAAA,GAAG,GAAGiB,IAAI,CAACjB,GAAL,EAAN;AACA,iBAAO,CAAC;AAAE;AAAH,YAAe;AACdkB,YAAAA,KAAK,EAAEtB,YAAY,CAACuB,gBADN;AAEdC,YAAAA,gBAAgB,EAAEpB,GAAG,GAAGD,kBAFV;AAGdsB,YAAAA,kBAAkB,EAAErB;AAHN,WAAf,CAAP;AAzDR;AA+DH,KAhEM,CAAP;AAiEH,GAnEM,CAAP;AAoEH;;AACD,SAASsB,gCAAT,CAA0C/H,GAA1C,EAA+CgI,cAA/C,EAA+D;AAC3D,MAAI5I,EAAE,GAAGY,GAAG,CAACkG,OAAb;AAAA,MAAsB+B,SAAS,GAAG7I,EAAE,CAAC6I,SAArC;AAAA,MAAgDC,KAAK,GAAG9I,EAAE,CAAC8I,KAA3D;AAAA,MAAkEC,MAAM,GAAG/I,EAAE,CAAC+I,MAA9E;AACA,SAAO;AACHpC,IAAAA,GAAG,EAAEjC,aAAa,GAAG,YAAhB,GAA+BmE,SAA/B,GAA2C,QAA3C,GAAsDC,KAAtD,GAA8D,GAA9D,GAAoEnE,+BAApE,GAAsG,OAAtG,GAAgHoE,MADlH;AAEHhG,IAAAA,IAAI,EAAE;AACF;AACAiG,MAAAA,eAAe,EAAEJ;AAFf;AAFH,GAAP;AAOH;;AACD,SAASK,4BAAT,CAAsCrI,GAAtC,EAA2CsI,UAA3C,EAAuD;AACnD,MAAIlJ,EAAE,GAAGY,GAAG,CAACkG,OAAb;AAAA,MAAsB+B,SAAS,GAAG7I,EAAE,CAAC6I,SAArC;AAAA,MAAgDC,KAAK,GAAG9I,EAAE,CAAC8I,KAA3D;AAAA,MAAkEC,MAAM,GAAG/I,EAAE,CAAC+I,MAA9E;AACA,SAAO;AACHpC,IAAAA,GAAG,EAAEjC,aAAa,GAAG,YAAhB,GAA+BmE,SAA/B,GAA2C,QAA3C,GAAsDC,KAAtD,GAA8D,GAA9D,GAAoElE,2BAApE,GAAkG,OAAlG,GAA4GmE,MAD9G;AAEHhG,IAAAA,IAAI,EAAE;AACF;AACAoG,MAAAA,WAAW,EAAED;AAFX;AAFH,GAAP;AAOH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,OAAO,GAAG,6BAAd;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,UAAU,GAAG,0BAAjB;AACA,IAAIC,eAAe,GAAG,aAAtB;AACA,IAAIC,SAAS,GAAG,IAAhB;;AACA,SAASC,YAAT,GAAwB;AACpB,MAAID,SAAJ,EAAe;AACX,WAAOA,SAAP;AACH;;AACDA,EAAAA,SAAS,GAAG,IAAI3F,OAAJ,CAAY,UAAUR,OAAV,EAAmByC,MAAnB,EAA2B;AAC/C,QAAI;AACA,UAAI4D,OAAO,GAAGC,SAAS,CAACC,IAAV,CAAeR,OAAf,EAAwBC,UAAxB,CAAd;;AACAK,MAAAA,OAAO,CAACG,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACjCzG,QAAAA,OAAO,CAACyG,KAAK,CAACC,MAAN,CAAaC,MAAd,CAAP;AACH,OAFD;;AAGAN,MAAAA,OAAO,CAACO,OAAR,GAAkB,UAAUH,KAAV,EAAiB;AAC/B,YAAI9J,EAAJ;;AACA8F,QAAAA,MAAM,CAAC5F,aAAa,CAACoB,MAAd,CAAqB;AAAe;AAApC,UAAwD;AAC3DwG,UAAAA,oBAAoB,EAAE,CAAC9H,EAAE,GAAG8J,KAAK,CAACC,MAAN,CAAaG,KAAnB,MAA8B,IAA9B,IAAsClK,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAAC+H;AAD7B,SAAxD,CAAD,CAAN;AAGH,OALD;;AAMA2B,MAAAA,OAAO,CAACS,eAAR,GAA0B,UAAUL,KAAV,EAAiB;AACvC,YAAIM,EAAE,GAAGN,KAAK,CAACC,MAAN,CAAaC,MAAtB,CADuC,CAEvC;AACA;AACA;AACA;AACA;;AACA,gBAAQF,KAAK,CAACO,UAAd;AACI,eAAK,CAAL;AACID,YAAAA,EAAE,CAACE,iBAAH,CAAqBhB,UAArB,EAAiC;AAC7BiB,cAAAA,OAAO,EAAE;AADoB,aAAjC;AAFR;AAMH,OAbD;AAcH,KAzBD,CA0BA,OAAOzK,CAAP,EAAU;AACNgG,MAAAA,MAAM,CAAC5F,aAAa,CAACoB,MAAd,CAAqB;AAAe;AAApC,QAAwD;AAC3DwG,QAAAA,oBAAoB,EAAEhI,CAAC,CAACiI;AADmC,OAAxD,CAAD,CAAN;AAGH;AACJ,GAhCW,CAAZ;AAiCA,SAAOyB,SAAP;AACH;;AACD,SAASgB,sBAAT,CAAgC5J,GAAhC,EAAqC;AACjC,SAAO6J,IAAI,CAACC,UAAU,CAAC9J,GAAD,CAAX,CAAX;AACH;;AACD,SAAS+J,qBAAT,CAA+B/J,GAA/B,EAAoC2H,KAApC,EAA2C;AACvC,SAAOqC,KAAK,CAACF,UAAU,CAAC9J,GAAD,CAAX,EAAkB2H,KAAlB,CAAZ;AACH;;AACD,SAASsC,0BAAT,CAAoCtC,KAApC,EAA2C;AACvC,SAAOqC,KAAK,CAACrB,eAAD,EAAkBhB,KAAlB,CAAZ;AACH;;AACD,SAASuC,2BAAT,GAAuC;AACnC,SAAOL,IAAI,CAAClB,eAAD,CAAX;AACH;;AACD,SAASqB,KAAT,CAAeG,GAAf,EAAoBC,KAApB,EAA2B;AACvB,SAAOtL,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAI4G,EAAJ,EAAQa,WAAR,EAAqBC,KAArB,EAA4BxB,OAA5B;AACA,WAAOhK,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzC,cAAQA,EAAE,CAAC2D,KAAX;AACI,aAAK,CAAL;AAAQ,iBAAO,CAAC;AAAE;AAAH,YAAc8F,YAAY,EAA1B,CAAP;;AACR,aAAK,CAAL;AACIW,UAAAA,EAAE,GAAGpK,EAAE,CAAC4D,IAAH,EAAL;AACAqH,UAAAA,WAAW,GAAGb,EAAE,CAACa,WAAH,CAAe3B,UAAf,EAA2B,WAA3B,CAAd;AACA4B,UAAAA,KAAK,GAAGD,WAAW,CAACE,WAAZ,CAAwB7B,UAAxB,CAAR;AACAI,UAAAA,OAAO,GAAGwB,KAAK,CAACE,GAAN,CAAU;AAChBC,YAAAA,YAAY,EAAEN,GADE;AAEhBC,YAAAA,KAAK,EAAEA;AAFS,WAAV,CAAV;AAIA,iBAAO,CAAC;AAAE;AAAH,YAAe,IAAInH,OAAJ,CAAY,UAAUR,OAAV,EAAmByC,MAAnB,EAA2B;AACrD4D,YAAAA,OAAO,CAACG,SAAR,GAAoB,UAAUyB,MAAV,EAAkB;AAClCjI,cAAAA,OAAO;AACV,aAFD;;AAGA4H,YAAAA,WAAW,CAAChB,OAAZ,GAAsB,UAAUH,KAAV,EAAiB;AACnC,kBAAI9J,EAAJ;;AACA8F,cAAAA,MAAM,CAAC5F,aAAa,CAACoB,MAAd,CAAqB;AAAc;AAAnC,gBAAwD;AAC3DwG,gBAAAA,oBAAoB,EAAE,CAAC9H,EAAE,GAAG8J,KAAK,CAACC,MAAN,CAAaG,KAAnB,MAA8B,IAA9B,IAAsClK,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAAC+H;AAD7B,eAAxD,CAAD,CAAN;AAGH,aALD;AAMH,WAViB,CAAf,CAAP;AAVR;AAsBH,KAvBM,CAAP;AAwBH,GA1BM,CAAP;AA2BH;;AACD,SAAS0C,IAAT,CAAcM,GAAd,EAAmB;AACf,SAAOrL,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAI4G,EAAJ,EAAQa,WAAR,EAAqBC,KAArB,EAA4BxB,OAA5B;AACA,WAAOhK,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzC,cAAQA,EAAE,CAAC2D,KAAX;AACI,aAAK,CAAL;AAAQ,iBAAO,CAAC;AAAE;AAAH,YAAc8F,YAAY,EAA1B,CAAP;;AACR,aAAK,CAAL;AACIW,UAAAA,EAAE,GAAGpK,EAAE,CAAC4D,IAAH,EAAL;AACAqH,UAAAA,WAAW,GAAGb,EAAE,CAACa,WAAH,CAAe3B,UAAf,EAA2B,UAA3B,CAAd;AACA4B,UAAAA,KAAK,GAAGD,WAAW,CAACE,WAAZ,CAAwB7B,UAAxB,CAAR;AACAI,UAAAA,OAAO,GAAGwB,KAAK,CAACrK,GAAN,CAAUkK,GAAV,CAAV;AACA,iBAAO,CAAC;AAAE;AAAH,YAAe,IAAIlH,OAAJ,CAAY,UAAUR,OAAV,EAAmByC,MAAnB,EAA2B;AACrD4D,YAAAA,OAAO,CAACG,SAAR,GAAoB,UAAUC,KAAV,EAAiB;AACjC,kBAAIE,MAAM,GAAGF,KAAK,CAACC,MAAN,CAAaC,MAA1B;;AACA,kBAAIA,MAAJ,EAAY;AACR3G,gBAAAA,OAAO,CAAC2G,MAAM,CAACgB,KAAR,CAAP;AACH,eAFD,MAGK;AACD3H,gBAAAA,OAAO,CAACkI,SAAD,CAAP;AACH;AACJ,aARD;;AASAN,YAAAA,WAAW,CAAChB,OAAZ,GAAsB,UAAUH,KAAV,EAAiB;AACnC,kBAAI9J,EAAJ;;AACA8F,cAAAA,MAAM,CAAC5F,aAAa,CAACoB,MAAd,CAAqB;AAAc;AAAnC,gBAAsD;AACzDwG,gBAAAA,oBAAoB,EAAE,CAAC9H,EAAE,GAAG8J,KAAK,CAACC,MAAN,CAAaG,KAAnB,MAA8B,IAA9B,IAAsClK,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAAC+H;AAD/B,eAAtD,CAAD,CAAN;AAGH,aALD;AAMH,WAhBiB,CAAf,CAAP;AAPR;AAyBH,KA1BM,CAAP;AA2BH,GA7BM,CAAP;AA8BH;;AACD,SAAS2C,UAAT,CAAoB9J,GAApB,EAAyB;AACrB,SAAOA,GAAG,CAACkG,OAAJ,CAAYgC,KAAZ,GAAoB,GAApB,GAA0BlI,GAAG,CAACY,IAArC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIgK,MAAM,GAAG,IAAI5L,QAAQ,CAAC6L,MAAb,CAAoB,qBAApB,CAAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,SAASC,oBAAT,CAA8B9K,GAA9B,EAAmC;AAC/B,SAAOlB,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAI+E,KAAJ,EAAWoD,GAAX;AACA,WAAOjM,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzC,cAAQA,EAAE,CAAC2D,KAAX;AACI,aAAK,CAAL;AACI,cAAI,CAAChE,IAAI,CAACiM,oBAAL,EAAL,EAAkC,OAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;AAClCrD,UAAAA,KAAK,GAAGgD,SAAR;AACAvL,UAAAA,EAAE,CAAC2D,KAAH,GAAW,CAAX;;AACJ,aAAK,CAAL;AACI3D,UAAAA,EAAE,CAACkG,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;AACA,iBAAO,CAAC;AAAE;AAAH,YAAcqE,sBAAsB,CAAC5J,GAAD,CAApC,CAAP;;AACJ,aAAK,CAAL;AACI2H,UAAAA,KAAK,GAAGvI,EAAE,CAAC4D,IAAH,EAAR;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;;AACJ,aAAK,CAAL;AACI+H,UAAAA,GAAG,GAAG3L,EAAE,CAAC4D,IAAH,EAAN,CADJ,CAEI;;AACA4H,UAAAA,MAAM,CAACK,IAAP,CAAY,iDAAiDF,GAA7D;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;;AACJ,aAAK,CAAL;AAAQ,iBAAO,CAAC;AAAE;AAAH,YAAepD,KAAf,CAAP;;AACR,aAAK,CAAL;AAAQ,iBAAO,CAAC;AAAE;AAAH,YAAegD,SAAf,CAAP;AAjBZ;AAmBH,KApBM,CAAP;AAqBH,GAvBM,CAAP;AAwBH;AACD;AACA;AACA;;;AACA,SAASO,mBAAT,CAA6BlL,GAA7B,EAAkC2H,KAAlC,EAAyC;AACrC,MAAI5I,IAAI,CAACiM,oBAAL,EAAJ,EAAiC;AAC7B,WAAOjB,qBAAqB,CAAC/J,GAAD,EAAM2H,KAAN,CAArB,CAAkC3C,KAAlC,CAAwC,UAAU9F,CAAV,EAAa;AACxD;AACA0L,MAAAA,MAAM,CAACK,IAAP,CAAY,gDAAgD/L,CAA5D;AACH,KAHM,CAAP;AAIH;;AACD,SAAO+D,OAAO,CAACR,OAAR,EAAP;AACH;;AACD,SAAS0I,iCAAT,GAA6C;AACzC,SAAOrM,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAIwI,kBAAJ,EAAwBC,QAAxB;AACA,WAAOvM,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzC,cAAQA,EAAE,CAAC2D,KAAX;AACI,aAAK,CAAL;AACIqI,UAAAA,kBAAkB,GAAGT,SAArB;AACAvL,UAAAA,EAAE,CAAC2D,KAAH,GAAW,CAAX;;AACJ,aAAK,CAAL;AACI3D,UAAAA,EAAE,CAACkG,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,CAAJ,GAAS,CAAT,CAAb;;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc2E,2BAA2B,EAAzC,CAAP;;AACJ,aAAK,CAAL;AACIkB,UAAAA,kBAAkB,GAAGhM,EAAE,CAAC4D,IAAH,EAArB;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;;AACJ,aAAK,CAAL;AACI5D,UAAAA,EAAE,CAAC4D,IAAH;;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;;AACJ,aAAK,CAAL;AACI,cAAI,CAACoI,kBAAL,EAAyB;AACrBC,YAAAA,QAAQ,GAAGxK,MAAM,EAAjB,CADqB,CAErB;AACA;AACA;AACA;AACA;;AACAoJ,YAAAA,0BAA0B,CAACoB,QAAD,CAA1B,CAAqCrG,KAArC,CAA2C,UAAU9F,CAAV,EAAa;AACpD,qBAAO0L,MAAM,CAACK,IAAP,CAAY,wDAAwD/L,CAApE,CAAP;AACH,aAFD,EAPqB,CAUrB;;AACAoM,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BF,QAA3B,GAAsC,wEAAlD;AACA,mBAAO,CAAC;AAAE;AAAH,cAAeA,QAAf,CAAP;AACH,WAbD,MAcK;AACD,mBAAO,CAAC;AAAE;AAAH,cAAeD,kBAAf,CAAP;AACH;;AA9BT;AAgCH,KAjCM,CAAP;AAkCH,GApCM,CAAP;AAqCH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,WAAT,GAAuB;AACnB,MAAIC,UAAU,GAAGpL,aAAa,EAA9B;AACA,SAAOoL,UAAU,CAAC3L,OAAlB;AACH;;AACD,SAAS4L,aAAT,GAAyB;AACrB,SAAO5M,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAIzC,KAAJ;AACA,WAAOrB,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzCe,MAAAA,KAAK,GAAGE,aAAa,EAArB;;AACA,UAAIF,KAAK,CAACL,OAAN,IAAiBK,KAAK,CAACwH,KAA3B,EAAkC;AAC9B,eAAO,CAAC;AAAE;AAAH,UAAexH,KAAK,CAACwH,KAAN,CAAYjF,OAA3B,CAAP;AACH,OAFD,MAGK;AACD;AACA,cAAMJ,KAAK,CAAC,mEAAD,CAAX;AACH;AACJ,KATM,CAAP;AAUH,GAZM,CAAP;AAaH;;AACD,SAASqJ,mBAAT,GAA+B;AAC3B,MAAIC,OAAO,GAAG7M,IAAI,CAAC8M,SAAL,EAAd;;AACA,MAAI,OAAOD,OAAO,CAACE,6BAAf,KAAiD,QAAjD,IACAF,OAAO,CAACE,6BAAR,KAA0C,IAD9C,EACoD;AAChD;AACH;;AACD,MAAIL,UAAU,GAAGpL,aAAa,EAA9B;AACAoL,EAAAA,UAAU,CAAC3L,OAAX,GAAqB,IAArB;AACA,MAAIiM,aAAa,GAAG,IAAIhN,IAAI,CAAC0C,QAAT,EAApB;AACAgK,EAAAA,UAAU,CAAC9D,KAAX,GAAmBoE,aAAnB;;AACA,MAAI,OAAOH,OAAO,CAACE,6BAAf,KAAiD,QAArD,EAA+D;AAC3DC,IAAAA,aAAa,CAACtJ,OAAd,CAAsBmJ,OAAO,CAACE,6BAA9B;AACH,GAFD,MAGK;AACDC,IAAAA,aAAa,CAACtJ,OAAd,CAAsB0I,iCAAiC,EAAvD;AACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIa,qBAAqB,GAAG;AAAE1C,EAAAA,KAAK,EAAE;AAAT,CAA5B;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS2C,gBAAT,CAA0BC,cAA1B,EAA0C;AACtC,SAAOnN,IAAI,CAACoN,MAAL,CAAYC,YAAZ,CAAyBrF,IAAI,CAACC,SAAL,CAAekF,cAAf,CAAzB;AACP;AAAe,OADR,CAAP;AAEH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASG,UAAT,CAAoBrM,GAApB,EAAyB8F,sBAAzB,EAAiDwG,YAAjD,EAA+D;AAC3D,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAG,KAAf;AAAuB;;AACtD,SAAOxN,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAIzC,KAAJ,EAAWwH,KAAX,EAAkB2B,KAAlB,EAAyBiD,WAAzB,EAAsCC,sBAAtC,EAA8DpN,EAA9D,EAAkEsH,EAAlE,EAAsE+F,EAAtE,EAA0EC,WAA1E,EAAuFC,mBAAvF,EAA4G7E,kBAA5G,EAAgI8E,mBAAhI,EAAqJ7B,GAArJ,EAA0J8B,kBAA1J;;AACA,WAAO/N,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAUgK,EAAV,EAAc;AACzC,cAAQA,EAAE,CAAC/J,KAAX;AACI,aAAK,CAAL;AACItC,UAAAA,eAAe,CAACT,GAAD,CAAf;AACAG,UAAAA,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAAhB;AACA2H,UAAAA,KAAK,GAAGxH,KAAK,CAACwH,KAAd;AACA2B,UAAAA,KAAK,GAAGqB,SAAR;AACA,cAAI,CAAC,CAAChD,KAAN,EAAa,OAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;AACb,iBAAO,CAAC;AAAE;AAAH,YAAcmD,oBAAoB,CAAC9K,GAAD,CAAlC,CAAP;;AACJ,aAAK,CAAL;AACIuM,UAAAA,WAAW,GAAGO,EAAE,CAAC9J,IAAH,EAAd;;AACA,cAAIuJ,WAAW,IAAIQ,OAAO,CAACR,WAAD,CAA1B,EAAyC;AACrC5E,YAAAA,KAAK,GAAG4E,WAAR;AACArM,YAAAA,QAAQ,CAACF,GAAD,EAAMlB,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAEwH,cAAAA,KAAK,EAAEA;AAAT,aAA1C,CAAN,CAAR,CAFqC,CAGrC;;AACAqF,YAAAA,oBAAoB,CAAChN,GAAD,EAAM;AAAE2H,cAAAA,KAAK,EAAEA,KAAK,CAACA;AAAf,aAAN,CAApB;AACH;;AACDmF,UAAAA,EAAE,CAAC/J,KAAH,GAAW,CAAX;;AACJ,aAAK,CAAL;AACI;AACA,cAAI,CAACuJ,YAAD,IAAiB3E,KAAjB,IAA0BoF,OAAO,CAACpF,KAAD,CAArC,EAA8C;AAC1C,mBAAO,CAAC;AAAE;AAAH,cAAe;AACdA,cAAAA,KAAK,EAAEA,KAAK,CAACA;AADC,aAAf,CAAP;AAGH;;AACD,cAAI,CAAC6D,WAAW,EAAhB,EAAoB,OAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;AACpBpM,UAAAA,EAAE,GAAGyG,aAAL;AACAa,UAAAA,EAAE,GAAG2B,4BAAL;AACAoE,UAAAA,EAAE,GAAG,CAACzM,GAAD,CAAL;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc0L,aAAa,EAA3B,CAAP;;AACJ,aAAK,CAAL;AAAQ,iBAAO,CAAC;AAAE;AAAH,YAActM,EAAE,CAAC6N,KAAH,CAAS,KAAK,CAAd,EAAiB,CAACvG,EAAE,CAACuG,KAAH,CAAS,KAAK,CAAd,EAAiBR,EAAE,CAACS,MAAH,CAAU,CAACJ,EAAE,CAAC9J,IAAH,EAAD,CAAV,CAAjB,CAAD,EAA2C8C,sBAA3C,CAAjB,CAAd,CAAP;;AACR,aAAK,CAAL;AACI0G,UAAAA,sBAAsB,GAAGM,EAAE,CAAC9J,IAAH,EAAzB,CADJ,CAEI;;AACA,iBAAO,CAAC;AAAE;AAAH,YAAckI,mBAAmB,CAAClL,GAAD,EAAMwM,sBAAN,CAAjC,CAAP;;AACJ,aAAK,CAAL;AACI;AACAM,UAAAA,EAAE,CAAC9J,IAAH,GAFJ,CAGI;;;AACA9C,UAAAA,QAAQ,CAACF,GAAD,EAAMlB,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAEwH,YAAAA,KAAK,EAAE6E;AAAT,WAA1C,CAAN,CAAR;AACA,iBAAO,CAAC;AAAE;AAAH,YAAe;AAAE7E,YAAAA,KAAK,EAAE6E,sBAAsB,CAAC7E;AAAhC,WAAf,CAAP;;AACJ,aAAK,CAAL;AACImF,UAAAA,EAAE,CAACxH,IAAH,CAAQC,IAAR,CAAa,CAAC,CAAD,EAAI,EAAJ,GAAU,EAAV,CAAb;;AACA,cAAI,CAACpF,KAAK,CAACgN,cAAX,EAA2B,OAAO,CAAC;AAAE;AAAH,YAAc,CAAd,CAAP;AAC3B,iBAAO,CAAC;AAAE;AAAH,YAAchN,KAAK,CAACgN,cAAN,CAAqBC,QAArB,EAAd,CAAP;;AACJ,aAAK,CAAL;AACIV,UAAAA,WAAW,GAAGI,EAAE,CAAC9J,IAAH,EAAd;AACA2J,UAAAA,mBAAmB,GAAG5N,IAAI,CAACsO,YAAL,CAAkBX,WAAW,CAAC/E,KAA9B,CAAtB;AACAG,UAAAA,kBAAkB,GAAG6E,mBAAmB,KAAK,IAAxB,IACjBA,mBAAmB,GAAGjF,IAAI,CAACjB,GAAL,EADL,IAEjBkG,mBAAmB,GAAG,CAFL,GAGfA,mBAAmB,GAAG,IAHP,GAIfjF,IAAI,CAACjB,GAAL,EAJN;AAKAkB,UAAAA,KAAK,GAAG7I,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBgL,WAAnB,CAAf,EAAgD;AAAE5E,YAAAA,kBAAkB,EAAEA;AAAtB,WAAhD,CAAR;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,EAAd,CAAP;;AACJ,aAAK,CAAL;AAAQ,iBAAO,CAAC;AAAE;AAAH,YAAcnF,UAAU,CAAC3C,GAAD,CAAV,CAAgBgF,KAAhB,CAAsB,UAAUsI,EAAV,EAAc;AACzD;AACA,kBAAMhO,aAAa,CAACoB,MAAd,CAAqB;AAAkB;AAAvC,aAAN;AACH,WAHwB,CAAd,CAAP;;AAIR,aAAK,CAAL;AACIkM,UAAAA,mBAAmB,GAAGE,EAAE,CAAC9J,IAAH,EAAtB;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc6C,aAAa,CAACkC,gCAAgC,CAAC/H,GAAD,EAAM4M,mBAAN,CAAjC,EAA6D9G,sBAA7D,CAA3B,CAAP;;AACJ,aAAK,EAAL;AACI6B,UAAAA,KAAK,GAAGmF,EAAE,CAAC9J,IAAH,EAAR;AACA8J,UAAAA,EAAE,CAAC/J,KAAH,GAAW,EAAX;;AACJ,aAAK,EAAL;AAAS,iBAAO,CAAC;AAAE;AAAH,YAAc,EAAd,CAAP;;AACT,aAAK,EAAL;AACIgI,UAAAA,GAAG,GAAG+B,EAAE,CAAC9J,IAAH,EAAN,CADJ,CAEI;;AACA4H,UAAAA,MAAM,CAACtB,KAAP,CAAayB,GAAb;AACAzB,UAAAA,KAAK,GAAGyB,GAAR;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,EAAd,CAAP;;AACJ,aAAK,EAAL;AACI,cAAI,CAAC,CAACpD,KAAN,EAAa,OAAO,CAAC;AAAE;AAAH,YAAc,EAAd,CAAP,CADjB,CAEI;AACA;;AACAkF,UAAAA,kBAAkB,GAAGU,oBAAoB,CAACjE,KAAD,CAAzC;AACA,iBAAO,CAAC;AAAE;AAAH,YAAc,EAAd,CAAP;;AACJ,aAAK,EAAL;AACIuD,UAAAA,kBAAkB,GAAG;AACjBlF,YAAAA,KAAK,EAAEA,KAAK,CAACA;AADI,WAArB,CADJ,CAII;AACA;;AACAzH,UAAAA,QAAQ,CAACF,GAAD,EAAMlB,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAEwH,YAAAA,KAAK,EAAEA;AAAT,WAA1C,CAAN,CAAR;AACA,iBAAO,CAAC;AAAE;AAAH,YAAcuD,mBAAmB,CAAClL,GAAD,EAAM2H,KAAN,CAAjC,CAAP;;AACJ,aAAK,EAAL;AACImF,UAAAA,EAAE,CAAC9J,IAAH;;AACA8J,UAAAA,EAAE,CAAC/J,KAAH,GAAW,EAAX;;AACJ,aAAK,EAAL;AACIiK,UAAAA,oBAAoB,CAAChN,GAAD,EAAM6M,kBAAN,CAApB;AACA,iBAAO,CAAC;AAAE;AAAH,YAAeA,kBAAf,CAAP;AA1FR;AA4FH,KA7FM,CAAP;AA8FH,GAhGM,CAAP;AAiGH;;AACD,SAASW,gBAAT,CAA0BxN,GAA1B,EAA+B8F,sBAA/B,EAAuD2H,IAAvD,EAA6DC,QAA7D,EAAuEC,OAAvE,EAAgF;AAC5E,MAAIxN,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAApB;AACA,MAAI4N,aAAa,GAAG;AAChBC,IAAAA,IAAI,EAAEH,QADU;AAEhBpE,IAAAA,KAAK,EAAEqE,OAFS;AAGhBF,IAAAA,IAAI,EAAEA;AAHU,GAApB;;AAKA,MAAIK,QAAQ,GAAGhP,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAEP,IAAAA,cAAc,EAAEd,KAAK,CAACiP,aAAN,CAAoBjP,KAAK,CAACiP,aAAN,CAAoB,EAApB,EAAwB5N,KAAK,CAACP,cAA9B,CAApB,EAAmE,CAACgO,aAAD,CAAnE;AAAlB,GAA1C,CAAf;AACA;AACJ;AACA;;;AACI,MAAI,CAACE,QAAQ,CAACE,cAAd,EAA8B;AAC1B,QAAIA,cAAc,GAAGC,oBAAoB,CAACjO,GAAD,EAAM8F,sBAAN,CAAzC;AACAgI,IAAAA,QAAQ,CAACE,cAAT,GAA0BA,cAA1B;AACH,GAd2E,CAe5E;AACA;;;AACA,MAAI,CAACF,QAAQ,CAACE,cAAT,CAAwB7I,SAAxB,EAAD,IACAhF,KAAK,CAAC+N,yBAAN,KAAoC,IADxC,EAC8C;AAC1CJ,IAAAA,QAAQ,CAACE,cAAT,CAAwBlJ,KAAxB;AACH,GApB2E,CAqB5E;;;AACA,MAAI3E,KAAK,CAACwH,KAAN,IAAeoF,OAAO,CAAC5M,KAAK,CAACwH,KAAP,CAA1B,EAAyC;AACrC,QAAIwG,YAAY,GAAGhO,KAAK,CAACwH,KAAzB;AACA1E,IAAAA,OAAO,CAACR,OAAR,GACK2L,IADL,CACU,YAAY;AAAE,aAAOV,QAAQ,CAAC;AAAE/F,QAAAA,KAAK,EAAEwG,YAAY,CAACxG;AAAtB,OAAD,CAAf;AAAiD,KADzE,EAEK3C,KAFL,CAEW,YAAY;AACnB;AACH,KAJD;AAKH;;AACD9E,EAAAA,QAAQ,CAACF,GAAD,EAAM8N,QAAN,CAAR;AACH;;AACD,SAASO,mBAAT,CAA6BrO,GAA7B,EAAkC0N,QAAlC,EAA4C;AACxC,MAAIvN,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAApB;AACA,MAAIsO,YAAY,GAAGnO,KAAK,CAACP,cAAN,CAAqB2O,MAArB,CAA4B,UAAUC,aAAV,EAAyB;AAAE,WAAOA,aAAa,CAACX,IAAd,KAAuBH,QAA9B;AAAyC,GAAhG,CAAnB;;AACA,MAAIY,YAAY,CAACG,MAAb,KAAwB,CAAxB,IACAtO,KAAK,CAAC6N,cADN,IAEA7N,KAAK,CAAC6N,cAAN,CAAqB7I,SAArB,EAFJ,EAEsC;AAClChF,IAAAA,KAAK,CAAC6N,cAAN,CAAqB/I,IAArB;AACH;;AACD/E,EAAAA,QAAQ,CAACF,GAAD,EAAMlB,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAEP,IAAAA,cAAc,EAAE0O;AAAlB,GAA1C,CAAN,CAAR;AACH;;AACD,SAASL,oBAAT,CAA8BjO,GAA9B,EAAmC8F,sBAAnC,EAA2D;AACvD,MAAI4I,KAAK,GAAG,IAAZ;;AACA,SAAO,IAAIrK,SAAJ,EACP;AACA;AACA,cAAY;AAAE,WAAOvF,KAAK,CAAC8D,SAAN,CAAgB8L,KAAhB,EAAuB,KAAK,CAA5B,EAA+B,KAAK,CAApC,EAAuC,YAAY;AACpE,UAAIvO,KAAJ,EAAWiJ,MAAX;AACA,aAAOtK,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzC,gBAAQA,EAAE,CAAC2D,KAAX;AACI,eAAK,CAAL;AACI5C,YAAAA,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAAhB;AACA,gBAAI,CAAC,CAACG,KAAK,CAACwH,KAAZ,EAAmB,OAAO,CAAC;AAAE;AAAH,cAAc,CAAd,CAAP;AACnB,mBAAO,CAAC;AAAE;AAAH,cAAc0E,UAAU,CAACrM,GAAD,EAAM8F,sBAAN,CAAxB,CAAP;;AACJ,eAAK,CAAL;AACIsD,YAAAA,MAAM,GAAGhK,EAAE,CAAC4D,IAAH,EAAT;AACA,mBAAO,CAAC;AAAE;AAAH,cAAc,CAAd,CAAP;;AACJ,eAAK,CAAL;AAAQ,mBAAO,CAAC;AAAE;AAAH,cAAcqJ,UAAU,CAACrM,GAAD,EAAM8F,sBAAN,EAA8B,IAA9B,CAAxB,CAAP;;AACR,eAAK,CAAL;AACIsD,YAAAA,MAAM,GAAGhK,EAAE,CAAC4D,IAAH,EAAT;AACA5D,YAAAA,EAAE,CAAC2D,KAAH,GAAW,CAAX;;AACJ,eAAK,CAAL;AACI;AACA,gBAAIqG,MAAM,CAACE,KAAX,EAAkB;AACd,oBAAMF,MAAM,CAACE,KAAb;AACH;;AACD,mBAAO,CAAC;AAAE;AAAH,aAAP;AAjBR;AAmBH,OApBM,CAAP;AAqBH,KAvBoB,CAAP;AAuBT,GA1BE,EA0BA,YAAY;AACf;AACA,WAAO,IAAP;AACH,GA7BM,EA6BJ,YAAY;AACX,QAAInJ,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAApB;;AACA,QAAIG,KAAK,CAACwH,KAAV,EAAiB;AACb;AACA,UAAIgH,qBAAqB,GAAGxO,KAAK,CAACwH,KAAN,CAAYG,kBAAZ,GACxB,CAAC3H,KAAK,CAACwH,KAAN,CAAYE,gBAAZ,GAA+B1H,KAAK,CAACwH,KAAN,CAAYG,kBAA5C,IACI,GAFoB,GAGxB,IAAI,EAAJ,GAAS,IAHb,CAFa,CAMb;;AACA,UAAI8G,sBAAsB,GAAGzO,KAAK,CAACwH,KAAN,CAAYE,gBAAZ,GAA+B,IAAI,EAAJ,GAAS,IAArE;AACA8G,MAAAA,qBAAqB,GAAG1N,IAAI,CAAC4N,GAAL,CAASF,qBAAT,EAAgCC,sBAAhC,CAAxB;AACA,aAAO3N,IAAI,CAAC6N,GAAL,CAAS,CAAT,EAAYH,qBAAqB,GAAGjH,IAAI,CAACjB,GAAL,EAApC,CAAP;AACH,KAVD,MAWK;AACD,aAAO,CAAP;AACH;AACJ,GA7CM,EA6CJxC,kBAAkB,CAACE,gBA7Cf,EA6CiCF,kBAAkB,CAACG,gBA7CpD,CAAP;AA8CH;;AACD,SAAS4I,oBAAT,CAA8BhN,GAA9B,EAAmC2H,KAAnC,EAA0C;AACtC,MAAIoH,SAAS,GAAGhP,QAAQ,CAACC,GAAD,CAAR,CAAcJ,cAA9B;;AACA,OAAK,IAAIoP,EAAE,GAAG,CAAT,EAAYC,WAAW,GAAGF,SAA/B,EAA0CC,EAAE,GAAGC,WAAW,CAACR,MAA3D,EAAmEO,EAAE,EAArE,EAAyE;AACrE,QAAIE,QAAQ,GAAGD,WAAW,CAACD,EAAD,CAA1B;;AACA,QAAI;AACA,UAAIE,QAAQ,CAACzB,IAAT,KAAkB;AAAW;AAA7B,SAA+C9F,KAAK,CAAC2B,KAAN,IAAe,IAAlE,EAAwE;AACpE;AACA;AACA;AACA4F,QAAAA,QAAQ,CAAC5F,KAAT,CAAe3B,KAAK,CAAC2B,KAArB;AACH,OALD,MAMK;AACD;AACA;AACA;AACA4F,QAAAA,QAAQ,CAACrB,IAAT,CAAclG,KAAd;AACH;AACJ,KAbD,CAcA,OAAOwH,OAAP,EAAgB,CACZ;AACH;AACJ;AACJ;;AACD,SAASpC,OAAT,CAAiBpF,KAAjB,EAAwB;AACpB,SAAOA,KAAK,CAACE,gBAAN,GAAyBH,IAAI,CAACjB,GAAL,EAAzB,GAAsC,CAA7C;AACH;;AACD,SAAS8G,oBAAT,CAA8BjE,KAA9B,EAAqC;AACjC,SAAO;AACH3B,IAAAA,KAAK,EAAEsE,gBAAgB,CAACD,qBAAD,CADpB;AAEH1C,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8F,QAAT,CAAkBpP,GAAlB,EAAuBqP,iBAAvB,EAA0CnB,yBAA1C,EAAqE;AACjE,MAAI/N,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAApB;;AACA,MAAIG,KAAK,CAACR,SAAV,EAAqB;AACjB,UAAML,aAAa,CAACoB,MAAd,CAAqB;AAAoB;AAAzC,MAAkE;AACpEC,MAAAA,OAAO,EAAEX,GAAG,CAACY;AADuD,KAAlE,CAAN;AAGH;;AACD,MAAIkN,QAAQ,GAAGhP,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAER,IAAAA,SAAS,EAAE;AAAb,GAA1C,CAAf;;AACA,MAAI,OAAO0P,iBAAP,KAA6B,QAAjC,EAA2C;AACvCvB,IAAAA,QAAQ,CAACvM,OAAT,GAAmB8N,iBAAnB;AACH,GAFD,MAGK;AACDvB,IAAAA,QAAQ,CAACX,cAAT,GAA0BkC,iBAA1B;AACH,GAbgE,CAcjE;AACA;AACA;;;AACAvB,EAAAA,QAAQ,CAACI,yBAAT,GACIA,yBAAyB,KAAKvD,SAA9B,GACM3K,GAAG,CAACsP,8BADV,GAEMpB,yBAHV;AAIAhO,EAAAA,QAAQ,CAACF,GAAD,EAAM8N,QAAN,CAAR,CArBiE,CAsBjE;;AACA,MAAIA,QAAQ,CAACvM,OAAb,EAAsB;AAClBD,IAAAA,UAAU,CAACtB,GAAD,EAAM8N,QAAQ,CAACvM,OAAf,CAAV,CAAkCyD,KAAlC,CAAwC,YAAY;AAChD;AACH,KAFD;AAGH;AACJ;;AACD,SAASuK,0BAAT,CAAoCvP,GAApC,EAAyCkO,yBAAzC,EAAoE;AAChE,MAAI/N,KAAK,GAAGJ,QAAQ,CAACC,GAAD,CAApB,CADgE,CAEhE;AACA;;AACA,MAAIG,KAAK,CAAC6N,cAAV,EAA0B;AACtB,QAAIE,yBAAyB,KAAK,IAAlC,EAAwC;AACpC/N,MAAAA,KAAK,CAAC6N,cAAN,CAAqBlJ,KAArB;AACH,KAFD,MAGK;AACD3E,MAAAA,KAAK,CAAC6N,cAAN,CAAqB/I,IAArB;AACH;AACJ;;AACD/E,EAAAA,QAAQ,CAACF,GAAD,EAAMlB,KAAK,CAAC4C,QAAN,CAAe5C,KAAK,CAAC4C,QAAN,CAAe,EAAf,EAAmBvB,KAAnB,CAAf,EAA0C;AAAE+N,IAAAA,yBAAyB,EAAEA;AAA7B,GAA1C,CAAN,CAAR;AACH;AACD;AACA;AACA;;;AACA,SAASd,QAAT,CAAkBpN,GAAlB,EAAuB8F,sBAAvB,EAA+CwG,YAA/C,EAA6D;AACzD,SAAOxN,KAAK,CAAC8D,SAAN,CAAgB,IAAhB,EAAsB,KAAK,CAA3B,EAA8B,KAAK,CAAnC,EAAsC,YAAY;AACrD,QAAIwG,MAAJ;AACA,WAAOtK,KAAK,CAACgE,WAAN,CAAkB,IAAlB,EAAwB,UAAU1D,EAAV,EAAc;AACzC,cAAQA,EAAE,CAAC2D,KAAX;AACI,aAAK,CAAL;AAAQ,iBAAO,CAAC;AAAE;AAAH,YAAcsJ,UAAU,CAACrM,GAAD,EAAM8F,sBAAN,EAA8BwG,YAA9B,CAAxB,CAAP;;AACR,aAAK,CAAL;AACIlD,UAAAA,MAAM,GAAGhK,EAAE,CAAC4D,IAAH,EAAT;;AACA,cAAIoG,MAAM,CAACE,KAAX,EAAkB;AACd,kBAAMF,MAAM,CAACE,KAAb;AACH;;AACD,iBAAO,CAAC;AAAE;AAAH,YAAe;AAAE3B,YAAAA,KAAK,EAAEyB,MAAM,CAACzB;AAAhB,WAAf,CAAP;AAPR;AASH,KAVM,CAAP;AAWH,GAbM,CAAP;AAcH;;AACD,SAAS6H,cAAT,CAAwBxP,GAAxB,EAA6B8F,sBAA7B,EAAqD2J,gBAArD,EAAuE9B,OAAvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA+B,YARA,EAQc;AACV,MAAIC,MAAM,GAAG,YAAY,CAAG,CAA5B;;AACA,MAAIC,OAAO,GAAG,YAAY,CAAG,CAA7B;;AACA,MAAIH,gBAAgB,CAAC5B,IAAjB,IAAyB,IAA7B,EAAmC;AAC/B8B,IAAAA,MAAM,GAAGF,gBAAgB,CAAC5B,IAAjB,CAAsBgC,IAAtB,CAA2BJ,gBAA3B,CAAT;AACH,GAFD,MAGK;AACDE,IAAAA,MAAM,GAAGF,gBAAT;AACH;;AACD,MAAIA,gBAAgB,CAACnG,KAAjB,IAA0B,IAA9B,EAAoC;AAChCsG,IAAAA,OAAO,GAAGH,gBAAgB,CAACnG,KAAjB,CAAuBuG,IAAvB,CAA4BJ,gBAA5B,CAAV;AACH,GAFD,MAGK,IAAI9B,OAAJ,EAAa;AACdiC,IAAAA,OAAO,GAAGjC,OAAV;AACH;;AACDH,EAAAA,gBAAgB,CAACxN,GAAD,EAAM8F,sBAAN,EAA8B;AAAW;AAAzC,IAAyD6J,MAAzD,EAAiEC,OAAjE,CAAhB;AACA,SAAO,YAAY;AAAE,WAAOvB,mBAAmB,CAACrO,GAAD,EAAM2P,MAAN,CAA1B;AAA0C,GAA/D;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,OAAT,CAAiB9P,GAAjB,EAAsB8F,sBAAtB,EAA8C;AAC1C,SAAO;AACH9F,IAAAA,GAAG,EAAEA,GADF;AAEHoP,IAAAA,QAAQ,EAAE,UAAUC,iBAAV,EAA6BnB,yBAA7B,EAAwD;AAAE,aAAOkB,QAAQ,CAACpP,GAAD,EAAMqP,iBAAN,EAAyBnB,yBAAzB,CAAf;AAAqE,KAFtI;AAGHqB,IAAAA,0BAA0B,EAAE,UAAUrB,yBAAV,EAAqC;AAC7D,aAAOqB,0BAA0B,CAACvP,GAAD,EAAMkO,yBAAN,CAAjC;AACH,KALE;AAMHd,IAAAA,QAAQ,EAAE,UAAUd,YAAV,EAAwB;AAC9B,aAAOc,QAAQ,CAACpN,GAAD,EAAM8F,sBAAN,EAA8BwG,YAA9B,CAAf;AACH,KARE;AASHkD,IAAAA,cAAc,EAAE,UAAUC,gBAAV,EAA4B9B,OAA5B,EAAqC+B,YAArC,EAAmD;AAC/D,aAAOF,cAAc,CAACxP,GAAD,EAAM8F,sBAAN;AACrB;AACZ;AACA;AACA;AACA;AACY2J,MAAAA,gBANqB,EAMH9B,OANG,CAArB;AAOH,KAjBE;AAkBHoC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,MAAM,EAAE,YAAY;AAChB,YAAIpQ,cAAc,GAAGG,QAAQ,CAACC,GAAD,CAAR,CAAcJ,cAAnC;;AACA,aAAK,IAAIoP,EAAE,GAAG,CAAT,EAAYiB,gBAAgB,GAAGrQ,cAApC,EAAoDoP,EAAE,GAAGiB,gBAAgB,CAACxB,MAA1E,EAAkFO,EAAE,EAApF,EAAwF;AACpF,cAAIR,aAAa,GAAGyB,gBAAgB,CAACjB,EAAD,CAApC;AACAX,UAAAA,mBAAmB,CAACrO,GAAD,EAAMwO,aAAa,CAACX,IAApB,CAAnB;AACH;;AACD,eAAO5K,OAAO,CAACR,OAAR,EAAP;AACH;AARK;AAlBP,GAAP;AA6BH;;AACD,SAASyN,eAAT,CAAyBlQ,GAAzB,EAA8B8F,sBAA9B,EAAsD;AAClD,SAAO;AACHsH,IAAAA,QAAQ,EAAE,UAAUd,YAAV,EAAwB;AAC9B,aAAOD,UAAU,CAACrM,GAAD,EAAM8F,sBAAN,EAA8BwG,YAA9B,CAAjB;AACH,KAHE;AAIHkB,IAAAA,gBAAgB,EAAE,UAAUE,QAAV,EAAoB;AAClC,aAAOF,gBAAgB,CAACxN,GAAD,EAAM8F,sBAAN,EAA8B;AAAW;AAAzC,QAAyD4H,QAAzD,CAAvB;AACH,KANE;AAOHW,IAAAA,mBAAmB,EAAE,UAAUX,QAAV,EAAoB;AAAE,aAAOW,mBAAmB,CAACrO,GAAD,EAAM0N,QAAN,CAA1B;AAA4C;AAPpF,GAAP;AASH;;AAED,IAAI9M,IAAI,GAAG,qBAAX;AACA,IAAIuP,OAAO,GAAG,OAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,UAArB;AACA,IAAIC,uBAAuB,GAAG,oBAA9B;;AACA,SAASC,gBAAT,CAA0B3R,QAA1B,EAAoC;AAChC;AACAA,EAAAA,QAAQ,CAACoR,QAAT,CAAkBQ,iBAAlB,CAAoC,IAAI1R,SAAS,CAAC2R,SAAd,CAAwBJ,cAAxB,EAAwC,UAAU9M,SAAV,EAAqB;AAC7F;AACA,QAAItD,GAAG,GAAGsD,SAAS,CAACmN,WAAV,CAAsB,KAAtB,EAA6B9J,YAA7B,EAAV;AACA,QAAIb,sBAAsB,GAAGxC,SAAS,CAACmN,WAAV,CAAsB,iBAAtB,CAA7B;AACA,WAAOX,OAAO,CAAC9P,GAAD,EAAM8F,sBAAN,CAAd;AACH,GALmC,EAKjC;AAAS;AALwB;AAMhC;AACR;AACA;AACA;AACA;AACA;AAXwC,GAY/B4K,oBAZ+B,CAYV;AAAW;AAZD;AAahC;AACR;AACA;AACA;AACA;AAjBwC,GAkB/BC,0BAlB+B,CAkBJ,UAAUrN,SAAV,EAAqBsN,mBAArB,EAA0CC,SAA1C,EAAqD;AACjF,QAAIC,wBAAwB,GAAGxN,SAAS,CAACmN,WAAV,CAAsBJ,uBAAtB,CAA/B;AACAS,IAAAA,wBAAwB,CAACxP,UAAzB;AACH,GArBmC,CAApC,EAFgC,CAwBhC;;AACA3C,EAAAA,QAAQ,CAACoR,QAAT,CAAkBQ,iBAAlB,CAAoC,IAAI1R,SAAS,CAAC2R,SAAd,CAAwBH,uBAAxB,EAAiD,UAAU/M,SAAV,EAAqB;AACtG;AACA,QAAItD,GAAG,GAAGsD,SAAS,CAACmN,WAAV,CAAsB,KAAtB,EAA6B9J,YAA7B,EAAV;AACA,QAAIb,sBAAsB,GAAGxC,SAAS,CAACmN,WAAV,CAAsB,iBAAtB,CAA7B;AACA,WAAOP,eAAe,CAAClQ,GAAD,EAAM8F,sBAAN,CAAtB;AACH,GALmC,EAKjC;AAAS;AALwB,IAKV4K,oBALU,CAKW;AAAW;AALtB,GAApC;AAMA/R,EAAAA,QAAQ,CAACoS,eAAT,CAAyBnQ,IAAzB,EAA+BuP,OAA/B;AACH;;AACDG,gBAAgB,CAACnR,iBAAiB,CAAC,SAAD,CAAlB,CAAhB;AACAwM,mBAAmB","sourcesContent":["'use strict';\n\nvar firebase = require('@firebase/app');\nvar component = require('@firebase/component');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"already-activated\" /* ALREADY_ACTIVATED */] = 'You are trying to activate AppCheck for FirebaseApp {$appName}, ' +\r\n        'while it is already activated. ' +\r\n        'AppCheck can only be activated once.',\r\n    _a[\"use-before-activation\" /* USE_BEFORE_ACTIVATION */] = 'AppCheck is being used before activate() is called for FirebaseApp {$appName}. ' +\r\n        'Please make sure you call activate() before instantiating other Firebase services.',\r\n    _a[\"fetch-network-error\" /* FETCH_NETWORK_ERROR */] = 'Fetch failed to connect to a network. Check Internet connection. ' +\r\n        'Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-parse-error\" /* FETCH_PARSE_ERROR */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-status-error\" /* FETCH_STATUS_ERROR */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-set\" /* STORAGE_WRITE */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"recaptcha-error\" /* RECAPTCHA_ERROR */] = 'ReCAPTCHA error.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('appCheck', 'AppCheck', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar APP_CHECK_STATES = new Map();\r\nvar DEFAULT_STATE = {\r\n    activated: false,\r\n    tokenObservers: []\r\n};\r\nvar DEBUG_STATE = {\r\n    enabled: false\r\n};\r\nfunction getState(app) {\r\n    return APP_CHECK_STATES.get(app) || DEFAULT_STATE;\r\n}\r\nfunction setState(app, state) {\r\n    APP_CHECK_STATES.set(app, state);\r\n}\r\nfunction getDebugState() {\r\n    return DEBUG_STATE;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getRecaptcha() {\r\n    return self.grecaptcha;\r\n}\r\nfunction ensureActivated(app) {\r\n    if (!getState(app).activated) {\r\n        throw ERROR_FACTORY.create(\"use-before-activation\" /* USE_BEFORE_ACTIVATION */, {\r\n            appName: app.name\r\n        });\r\n    }\r\n}\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n */\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECAPTCHA_URL = 'https://www.google.com/recaptcha/api.js';\r\nfunction initialize(app, siteKey) {\r\n    var state = getState(app);\r\n    var initialized = new util.Deferred();\r\n    setState(app, tslib.__assign(tslib.__assign({}, state), { reCAPTCHAState: { initialized: initialized } }));\r\n    var divId = \"fire_app_check_\" + app.name;\r\n    var invisibleDiv = document.createElement('div');\r\n    invisibleDiv.id = divId;\r\n    invisibleDiv.style.display = 'none';\r\n    document.body.appendChild(invisibleDiv);\r\n    var grecaptcha = getRecaptcha();\r\n    if (!grecaptcha) {\r\n        loadReCAPTCHAScript(function () {\r\n            var grecaptcha = getRecaptcha();\r\n            if (!grecaptcha) {\r\n                // it shouldn't happen.\r\n                throw new Error('no recaptcha');\r\n            }\r\n            grecaptcha.ready(function () {\r\n                // Invisible widgets allow us to set a different siteKey for each widget, so we use them to support multiple apps\r\n                renderInvisibleWidget(app, siteKey, grecaptcha, divId);\r\n                initialized.resolve(grecaptcha);\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        grecaptcha.ready(function () {\r\n            renderInvisibleWidget(app, siteKey, grecaptcha, divId);\r\n            initialized.resolve(grecaptcha);\r\n        });\r\n    }\r\n    return initialized.promise;\r\n}\r\nfunction getToken$2(app) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var reCAPTCHAState, recaptcha;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ensureActivated(app);\r\n                    reCAPTCHAState = getState(app).reCAPTCHAState;\r\n                    return [4 /*yield*/, reCAPTCHAState.initialized.promise];\r\n                case 1:\r\n                    recaptcha = _a.sent();\r\n                    return [2 /*return*/, new Promise(function (resolve, _reject) {\r\n                            // Updated after initialization is complete.\r\n                            var reCAPTCHAState = getState(app).reCAPTCHAState;\r\n                            recaptcha.ready(function () {\r\n                                resolve(\r\n                                // widgetId is guaranteed to be available if reCAPTCHAState.initialized.promise resolved.\r\n                                recaptcha.execute(reCAPTCHAState.widgetId, {\r\n                                    action: 'fire_app_check'\r\n                                }));\r\n                            });\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n *\r\n * @param app\r\n * @param container - Id of a HTML element.\r\n */\r\nfunction renderInvisibleWidget(app, siteKey, grecaptcha, container) {\r\n    var widgetId = grecaptcha.render(container, {\r\n        sitekey: siteKey,\r\n        size: 'invisible'\r\n    });\r\n    var state = getState(app);\r\n    setState(app, tslib.__assign(tslib.__assign({}, state), { reCAPTCHAState: tslib.__assign(tslib.__assign({}, state.reCAPTCHAState), { // state.reCAPTCHAState is set in the initialize()\r\n            widgetId: widgetId }) }));\r\n}\r\nfunction loadReCAPTCHAScript(onload) {\r\n    var script = document.createElement('script');\r\n    script.src = \"\" + RECAPTCHA_URL;\r\n    script.onload = onload;\r\n    document.head.appendChild(script);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar BASE_ENDPOINT = 'https://content-firebaseappcheck.googleapis.com/v1beta';\r\nvar EXCHANGE_RECAPTCHA_TOKEN_METHOD = 'exchangeRecaptchaToken';\r\nvar EXCHANGE_DEBUG_TOKEN_METHOD = 'exchangeDebugToken';\r\nvar TOKEN_REFRESH_TIME = {\r\n    /**\r\n     * The offset time before token natural expiration to run the refresh.\r\n     * This is currently 5 minutes.\r\n     */\r\n    OFFSET_DURATION: 5 * 60 * 1000,\r\n    /**\r\n     * This is the first retrial wait after an error. This is currently\r\n     * 30 seconds.\r\n     */\r\n    RETRIAL_MIN_WAIT: 30 * 1000,\r\n    /**\r\n     * This is the maximum retrial wait, currently 16 minutes.\r\n     */\r\n    RETRIAL_MAX_WAIT: 16 * 60 * 1000\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Port from auth proactiverefresh.js\r\n *\r\n */\r\n// TODO: move it to @firebase/util?\r\n// TODO: allow to config whether refresh should happen in the background\r\nvar Refresher = /** @class */ (function () {\r\n    function Refresher(operation, retryPolicy, getWaitDuration, lowerBound, upperBound) {\r\n        this.operation = operation;\r\n        this.retryPolicy = retryPolicy;\r\n        this.getWaitDuration = getWaitDuration;\r\n        this.lowerBound = lowerBound;\r\n        this.upperBound = upperBound;\r\n        this.pending = null;\r\n        this.nextErrorWaitInterval = lowerBound;\r\n        if (lowerBound > upperBound) {\r\n            throw new Error('Proactive refresh lower bound greater than upper bound!');\r\n        }\r\n    }\r\n    Refresher.prototype.start = function () {\r\n        this.nextErrorWaitInterval = this.lowerBound;\r\n        this.process(true).catch(function () {\r\n            /* we don't care about the result */\r\n        });\r\n    };\r\n    Refresher.prototype.stop = function () {\r\n        if (this.pending) {\r\n            this.pending.reject('cancelled');\r\n            this.pending = null;\r\n        }\r\n    };\r\n    Refresher.prototype.isRunning = function () {\r\n        return !!this.pending;\r\n    };\r\n    Refresher.prototype.process = function (hasSucceeded) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var error_1;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.stop();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        this.pending = new util.Deferred();\r\n                        return [4 /*yield*/, sleep(this.getNextRun(hasSucceeded))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        // Why do we resolve a promise, then immediate wait for it?\r\n                        // We do it to make the promise chain cancellable.\r\n                        // We can call stop() which rejects the promise before the following line execute, which makes\r\n                        // the code jump to the catch block.\r\n                        // TODO: unit test this\r\n                        this.pending.resolve();\r\n                        return [4 /*yield*/, this.pending.promise];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.pending = new util.Deferred();\r\n                        return [4 /*yield*/, this.operation()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.pending.resolve();\r\n                        return [4 /*yield*/, this.pending.promise];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.process(true).catch(function () {\r\n                            /* we don't care about the result */\r\n                        });\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        error_1 = _a.sent();\r\n                        if (this.retryPolicy(error_1)) {\r\n                            this.process(false).catch(function () {\r\n                                /* we don't care about the result */\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.stop();\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Refresher.prototype.getNextRun = function (hasSucceeded) {\r\n        if (hasSucceeded) {\r\n            // If last operation succeeded, reset next error wait interval and return\r\n            // the default wait duration.\r\n            this.nextErrorWaitInterval = this.lowerBound;\r\n            // Return typical wait duration interval after a successful operation.\r\n            return this.getWaitDuration();\r\n        }\r\n        else {\r\n            // Get next error wait interval.\r\n            var currentErrorWaitInterval = this.nextErrorWaitInterval;\r\n            // Double interval for next consecutive error.\r\n            this.nextErrorWaitInterval *= 2;\r\n            // Make sure next wait interval does not exceed the maximum upper bound.\r\n            if (this.nextErrorWaitInterval > this.upperBound) {\r\n                this.nextErrorWaitInterval = this.upperBound;\r\n            }\r\n            return currentErrorWaitInterval;\r\n        }\r\n    };\r\n    return Refresher;\r\n}());\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction exchangeToken(_a, platformLoggerProvider) {\r\n    var url = _a.url, body = _a.body;\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var headers, platformLogger, options, response, originalError_1, responseBody, originalError_2, match, timeToLiveAsNumber, now;\r\n        return tslib.__generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    headers = {\r\n                        'Content-Type': 'application/json'\r\n                    };\r\n                    platformLogger = platformLoggerProvider.getImmediate({\r\n                        optional: true\r\n                    });\r\n                    if (platformLogger) {\r\n                        headers['X-Firebase-Client'] = platformLogger.getPlatformInfoString();\r\n                    }\r\n                    options = {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(body),\r\n                        headers: headers\r\n                    };\r\n                    _b.label = 1;\r\n                case 1:\r\n                    _b.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, fetch(url, options)];\r\n                case 2:\r\n                    response = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    originalError_1 = _b.sent();\r\n                    throw ERROR_FACTORY.create(\"fetch-network-error\" /* FETCH_NETWORK_ERROR */, {\r\n                        originalErrorMessage: originalError_1.message\r\n                    });\r\n                case 4:\r\n                    if (response.status !== 200) {\r\n                        throw ERROR_FACTORY.create(\"fetch-status-error\" /* FETCH_STATUS_ERROR */, {\r\n                            httpStatus: response.status\r\n                        });\r\n                    }\r\n                    _b.label = 5;\r\n                case 5:\r\n                    _b.trys.push([5, 7, , 8]);\r\n                    return [4 /*yield*/, response.json()];\r\n                case 6:\r\n                    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\r\n                    responseBody = _b.sent();\r\n                    return [3 /*break*/, 8];\r\n                case 7:\r\n                    originalError_2 = _b.sent();\r\n                    throw ERROR_FACTORY.create(\"fetch-parse-error\" /* FETCH_PARSE_ERROR */, {\r\n                        originalErrorMessage: originalError_2.message\r\n                    });\r\n                case 8:\r\n                    match = responseBody.ttl.match(/^([\\d.]+)(s)$/);\r\n                    if (!match || !match[2] || isNaN(Number(match[1]))) {\r\n                        throw ERROR_FACTORY.create(\"fetch-parse-error\" /* FETCH_PARSE_ERROR */, {\r\n                            originalErrorMessage: \"ttl field (timeToLive) is not in standard Protobuf Duration \" +\r\n                                (\"format: \" + responseBody.ttl)\r\n                        });\r\n                    }\r\n                    timeToLiveAsNumber = Number(match[1]) * 1000;\r\n                    now = Date.now();\r\n                    return [2 /*return*/, {\r\n                            token: responseBody.attestationToken,\r\n                            expireTimeMillis: now + timeToLiveAsNumber,\r\n                            issuedAtTimeMillis: now\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExchangeRecaptchaTokenRequest(app, reCAPTCHAToken) {\r\n    var _a = app.options, projectId = _a.projectId, appId = _a.appId, apiKey = _a.apiKey;\r\n    return {\r\n        url: BASE_ENDPOINT + \"/projects/\" + projectId + \"/apps/\" + appId + \":\" + EXCHANGE_RECAPTCHA_TOKEN_METHOD + \"?key=\" + apiKey,\r\n        body: {\r\n            // eslint-disable-next-line\r\n            recaptcha_token: reCAPTCHAToken\r\n        }\r\n    };\r\n}\r\nfunction getExchangeDebugTokenRequest(app, debugToken) {\r\n    var _a = app.options, projectId = _a.projectId, appId = _a.appId, apiKey = _a.apiKey;\r\n    return {\r\n        url: BASE_ENDPOINT + \"/projects/\" + projectId + \"/apps/\" + appId + \":\" + EXCHANGE_DEBUG_TOKEN_METHOD + \"?key=\" + apiKey,\r\n        body: {\r\n            // eslint-disable-next-line\r\n            debug_token: debugToken\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DB_NAME = 'firebase-app-check-database';\r\nvar DB_VERSION = 1;\r\nvar STORE_NAME = 'firebase-app-check-store';\r\nvar DEBUG_TOKEN_KEY = 'debug-token';\r\nvar dbPromise = null;\r\nfunction getDBPromise() {\r\n    if (dbPromise) {\r\n        return dbPromise;\r\n    }\r\n    dbPromise = new Promise(function (resolve, reject) {\r\n        try {\r\n            var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n            request.onsuccess = function (event) {\r\n                resolve(event.target.result);\r\n            };\r\n            request.onerror = function (event) {\r\n                var _a;\r\n                reject(ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\r\n                    originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\r\n                }));\r\n            };\r\n            request.onupgradeneeded = function (event) {\r\n                var db = event.target.result;\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (event.oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME, {\r\n                            keyPath: 'compositeKey'\r\n                        });\r\n                }\r\n            };\r\n        }\r\n        catch (e) {\r\n            reject(ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            }));\r\n        }\r\n    });\r\n    return dbPromise;\r\n}\r\nfunction readTokenFromIndexedDB(app) {\r\n    return read(computeKey(app));\r\n}\r\nfunction writeTokenToIndexedDB(app, token) {\r\n    return write(computeKey(app), token);\r\n}\r\nfunction writeDebugTokenToIndexedDB(token) {\r\n    return write(DEBUG_TOKEN_KEY, token);\r\n}\r\nfunction readDebugTokenFromIndexedDB() {\r\n    return read(DEBUG_TOKEN_KEY);\r\n}\r\nfunction write(key, value) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var db, transaction, store, request;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getDBPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    transaction = db.transaction(STORE_NAME, 'readwrite');\r\n                    store = transaction.objectStore(STORE_NAME);\r\n                    request = store.put({\r\n                        compositeKey: key,\r\n                        value: value\r\n                    });\r\n                    return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            request.onsuccess = function (_event) {\r\n                                resolve();\r\n                            };\r\n                            transaction.onerror = function (event) {\r\n                                var _a;\r\n                                reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_WRITE */, {\r\n                                    originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\r\n                                }));\r\n                            };\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction read(key) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var db, transaction, store, request;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getDBPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    transaction = db.transaction(STORE_NAME, 'readonly');\r\n                    store = transaction.objectStore(STORE_NAME);\r\n                    request = store.get(key);\r\n                    return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            request.onsuccess = function (event) {\r\n                                var result = event.target.result;\r\n                                if (result) {\r\n                                    resolve(result.value);\r\n                                }\r\n                                else {\r\n                                    resolve(undefined);\r\n                                }\r\n                            };\r\n                            transaction.onerror = function (event) {\r\n                                var _a;\r\n                                reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                    originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\r\n                                }));\r\n                            };\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction computeKey(app) {\r\n    return app.options.appId + \"-\" + app.name;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new logger$1.Logger('@firebase/app-check');\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Always resolves. In case of an error reading from indexeddb, resolve with undefined\r\n */\r\nfunction readTokenFromStorage(app) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var token, e_1;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!util.isIndexedDBAvailable()) return [3 /*break*/, 5];\r\n                    token = undefined;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, readTokenFromIndexedDB(app)];\r\n                case 2:\r\n                    token = _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    // swallow the error and return undefined\r\n                    logger.warn(\"Failed to read token from indexeddb. Error: \" + e_1);\r\n                    return [3 /*break*/, 4];\r\n                case 4: return [2 /*return*/, token];\r\n                case 5: return [2 /*return*/, undefined];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Always resolves. In case of an error writing to indexeddb, print a warning and resolve the promise\r\n */\r\nfunction writeTokenToStorage(app, token) {\r\n    if (util.isIndexedDBAvailable()) {\r\n        return writeTokenToIndexedDB(app, token).catch(function (e) {\r\n            // swallow the error and resolve the promise\r\n            logger.warn(\"Failed to write token to indexeddb. Error: \" + e);\r\n        });\r\n    }\r\n    return Promise.resolve();\r\n}\r\nfunction readOrCreateDebugTokenFromStorage() {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var existingDebugToken, newToken;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    existingDebugToken = undefined;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, readDebugTokenFromIndexedDB()];\r\n                case 2:\r\n                    existingDebugToken = _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 4:\r\n                    if (!existingDebugToken) {\r\n                        newToken = uuidv4();\r\n                        // We don't need to block on writing to indexeddb\r\n                        // In case persistence failed, a new debug token will be generated everytime the page is refreshed.\r\n                        // It renders the debug token useless because you have to manually register(whitelist) the new token in the firebase console again and again.\r\n                        // If you see this error trying to use debug token, it probably means you are using a browser that doesn't support indexeddb.\r\n                        // You should switch to a different browser that supports indexeddb\r\n                        writeDebugTokenToIndexedDB(newToken).catch(function (e) {\r\n                            return logger.warn(\"Failed to persist debug token to indexeddb. Error: \" + e);\r\n                        });\r\n                        // Not using logger because I don't think we ever want this accidentally hidden?\r\n                        console.log(\"AppCheck debug token: \" + newToken + \". You will need to whitelist it in the Firebase console for it to work\");\r\n                        return [2 /*return*/, newToken];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, existingDebugToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isDebugMode() {\r\n    var debugState = getDebugState();\r\n    return debugState.enabled;\r\n}\r\nfunction getDebugToken() {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var state;\r\n        return tslib.__generator(this, function (_a) {\r\n            state = getDebugState();\r\n            if (state.enabled && state.token) {\r\n                return [2 /*return*/, state.token.promise];\r\n            }\r\n            else {\r\n                // should not happen!\r\n                throw Error(\"\\n            Can't get debug token in production mode.\\n        \");\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction initializeDebugMode() {\r\n    var globals = util.getGlobal();\r\n    if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== 'string' &&\r\n        globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== true) {\r\n        return;\r\n    }\r\n    var debugState = getDebugState();\r\n    debugState.enabled = true;\r\n    var deferredToken = new util.Deferred();\r\n    debugState.token = deferredToken;\r\n    if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN === 'string') {\r\n        deferredToken.resolve(globals.FIREBASE_APPCHECK_DEBUG_TOKEN);\r\n    }\r\n    else {\r\n        deferredToken.resolve(readOrCreateDebugTokenFromStorage());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Initial hardcoded value agreed upon across platforms for initial launch.\r\n// Format left open for possible dynamic error values and other fields in the future.\r\nvar defaultTokenErrorData = { error: 'UNKNOWN_ERROR' };\r\n/**\r\n * Stringify and base64 encode token error data.\r\n *\r\n * @param tokenError Error data, currently hardcoded.\r\n */\r\nfunction formatDummyToken(tokenErrorData) {\r\n    return util.base64.encodeString(JSON.stringify(tokenErrorData), \r\n    /* webSafe= */ false);\r\n}\r\n/**\r\n * This function will always resolve.\r\n * The result will contain an error field if there is any error.\r\n * In case there is an error, the token field in the result will be populated with a dummy value\r\n */\r\nfunction getToken$1(app, platformLoggerProvider, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var state, token, error, cachedToken, tokenFromDebugExchange, _a, _b, _c, customToken, issuedAtTimeSeconds, issuedAtTimeMillis, attestedClaimsToken, e_1, interopTokenResult;\r\n        return tslib.__generator(this, function (_d) {\r\n            switch (_d.label) {\r\n                case 0:\r\n                    ensureActivated(app);\r\n                    state = getState(app);\r\n                    token = state.token;\r\n                    error = undefined;\r\n                    if (!!token) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, readTokenFromStorage(app)];\r\n                case 1:\r\n                    cachedToken = _d.sent();\r\n                    if (cachedToken && isValid(cachedToken)) {\r\n                        token = cachedToken;\r\n                        setState(app, tslib.__assign(tslib.__assign({}, state), { token: token }));\r\n                        // notify all listeners with the cached token\r\n                        notifyTokenListeners(app, { token: token.token });\r\n                    }\r\n                    _d.label = 2;\r\n                case 2:\r\n                    // Return the cached token (from either memory or indexedDB) if it's valid\r\n                    if (!forceRefresh && token && isValid(token)) {\r\n                        return [2 /*return*/, {\r\n                                token: token.token\r\n                            }];\r\n                    }\r\n                    if (!isDebugMode()) return [3 /*break*/, 6];\r\n                    _a = exchangeToken;\r\n                    _b = getExchangeDebugTokenRequest;\r\n                    _c = [app];\r\n                    return [4 /*yield*/, getDebugToken()];\r\n                case 3: return [4 /*yield*/, _a.apply(void 0, [_b.apply(void 0, _c.concat([_d.sent()])), platformLoggerProvider])];\r\n                case 4:\r\n                    tokenFromDebugExchange = _d.sent();\r\n                    // Write debug token to indexedDB.\r\n                    return [4 /*yield*/, writeTokenToStorage(app, tokenFromDebugExchange)];\r\n                case 5:\r\n                    // Write debug token to indexedDB.\r\n                    _d.sent();\r\n                    // Write debug token to state.\r\n                    setState(app, tslib.__assign(tslib.__assign({}, state), { token: tokenFromDebugExchange }));\r\n                    return [2 /*return*/, { token: tokenFromDebugExchange.token }];\r\n                case 6:\r\n                    _d.trys.push([6, 12, , 13]);\r\n                    if (!state.customProvider) return [3 /*break*/, 8];\r\n                    return [4 /*yield*/, state.customProvider.getToken()];\r\n                case 7:\r\n                    customToken = _d.sent();\r\n                    issuedAtTimeSeconds = util.issuedAtTime(customToken.token);\r\n                    issuedAtTimeMillis = issuedAtTimeSeconds !== null &&\r\n                        issuedAtTimeSeconds < Date.now() &&\r\n                        issuedAtTimeSeconds > 0\r\n                        ? issuedAtTimeSeconds * 1000\r\n                        : Date.now();\r\n                    token = tslib.__assign(tslib.__assign({}, customToken), { issuedAtTimeMillis: issuedAtTimeMillis });\r\n                    return [3 /*break*/, 11];\r\n                case 8: return [4 /*yield*/, getToken$2(app).catch(function (_e) {\r\n                        // reCaptcha.execute() throws null which is not very descriptive.\r\n                        throw ERROR_FACTORY.create(\"recaptcha-error\" /* RECAPTCHA_ERROR */);\r\n                    })];\r\n                case 9:\r\n                    attestedClaimsToken = _d.sent();\r\n                    return [4 /*yield*/, exchangeToken(getExchangeRecaptchaTokenRequest(app, attestedClaimsToken), platformLoggerProvider)];\r\n                case 10:\r\n                    token = _d.sent();\r\n                    _d.label = 11;\r\n                case 11: return [3 /*break*/, 13];\r\n                case 12:\r\n                    e_1 = _d.sent();\r\n                    // `getToken()` should never throw, but logging error text to console will aid debugging.\r\n                    logger.error(e_1);\r\n                    error = e_1;\r\n                    return [3 /*break*/, 13];\r\n                case 13:\r\n                    if (!!token) return [3 /*break*/, 14];\r\n                    // if token is undefined, there must be an error.\r\n                    // we return a dummy token along with the error\r\n                    interopTokenResult = makeDummyTokenResult(error);\r\n                    return [3 /*break*/, 16];\r\n                case 14:\r\n                    interopTokenResult = {\r\n                        token: token.token\r\n                    };\r\n                    // write the new token to the memory state as well as the persistent storage.\r\n                    // Only do it if we got a valid new token\r\n                    setState(app, tslib.__assign(tslib.__assign({}, state), { token: token }));\r\n                    return [4 /*yield*/, writeTokenToStorage(app, token)];\r\n                case 15:\r\n                    _d.sent();\r\n                    _d.label = 16;\r\n                case 16:\r\n                    notifyTokenListeners(app, interopTokenResult);\r\n                    return [2 /*return*/, interopTokenResult];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction addTokenListener(app, platformLoggerProvider, type, listener, onError) {\r\n    var state = getState(app);\r\n    var tokenListener = {\r\n        next: listener,\r\n        error: onError,\r\n        type: type\r\n    };\r\n    var newState = tslib.__assign(tslib.__assign({}, state), { tokenObservers: tslib.__spreadArray(tslib.__spreadArray([], state.tokenObservers), [tokenListener]) });\r\n    /**\r\n     * Invoke the listener with the valid token, then start the token refresher\r\n     */\r\n    if (!newState.tokenRefresher) {\r\n        var tokenRefresher = createTokenRefresher(app, platformLoggerProvider);\r\n        newState.tokenRefresher = tokenRefresher;\r\n    }\r\n    // Create the refresher but don't start it if `isTokenAutoRefreshEnabled`\r\n    // is not true.\r\n    if (!newState.tokenRefresher.isRunning() &&\r\n        state.isTokenAutoRefreshEnabled === true) {\r\n        newState.tokenRefresher.start();\r\n    }\r\n    // invoke the listener async immediately if there is a valid token\r\n    if (state.token && isValid(state.token)) {\r\n        var validToken_1 = state.token;\r\n        Promise.resolve()\r\n            .then(function () { return listener({ token: validToken_1.token }); })\r\n            .catch(function () {\r\n            /** Ignore errors in listeners. */\r\n        });\r\n    }\r\n    setState(app, newState);\r\n}\r\nfunction removeTokenListener(app, listener) {\r\n    var state = getState(app);\r\n    var newObservers = state.tokenObservers.filter(function (tokenObserver) { return tokenObserver.next !== listener; });\r\n    if (newObservers.length === 0 &&\r\n        state.tokenRefresher &&\r\n        state.tokenRefresher.isRunning()) {\r\n        state.tokenRefresher.stop();\r\n    }\r\n    setState(app, tslib.__assign(tslib.__assign({}, state), { tokenObservers: newObservers }));\r\n}\r\nfunction createTokenRefresher(app, platformLoggerProvider) {\r\n    var _this = this;\r\n    return new Refresher(\r\n    // Keep in mind when this fails for any reason other than the ones\r\n    // for which we should retry, it will effectively stop the proactive refresh.\r\n    function () { return tslib.__awaiter(_this, void 0, void 0, function () {\r\n        var state, result;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    state = getState(app);\r\n                    if (!!state.token) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, getToken$1(app, platformLoggerProvider)];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 2: return [4 /*yield*/, getToken$1(app, platformLoggerProvider, true)];\r\n                case 3:\r\n                    result = _a.sent();\r\n                    _a.label = 4;\r\n                case 4:\r\n                    // getToken() always resolves. In case the result has an error field defined, it means the operation failed, and we should retry.\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); }, function () {\r\n        // TODO: when should we retry?\r\n        return true;\r\n    }, function () {\r\n        var state = getState(app);\r\n        if (state.token) {\r\n            // issuedAtTime + (50% * total TTL) + 5 minutes\r\n            var nextRefreshTimeMillis = state.token.issuedAtTimeMillis +\r\n                (state.token.expireTimeMillis - state.token.issuedAtTimeMillis) *\r\n                    0.5 +\r\n                5 * 60 * 1000;\r\n            // Do not allow refresh time to be past (expireTime - 5 minutes)\r\n            var latestAllowableRefresh = state.token.expireTimeMillis - 5 * 60 * 1000;\r\n            nextRefreshTimeMillis = Math.min(nextRefreshTimeMillis, latestAllowableRefresh);\r\n            return Math.max(0, nextRefreshTimeMillis - Date.now());\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }, TOKEN_REFRESH_TIME.RETRIAL_MIN_WAIT, TOKEN_REFRESH_TIME.RETRIAL_MAX_WAIT);\r\n}\r\nfunction notifyTokenListeners(app, token) {\r\n    var observers = getState(app).tokenObservers;\r\n    for (var _i = 0, observers_1 = observers; _i < observers_1.length; _i++) {\r\n        var observer = observers_1[_i];\r\n        try {\r\n            if (observer.type === \"EXTERNAL\" /* EXTERNAL */ && token.error != null) {\r\n                // If this listener was added by a 3P call, send any token error to\r\n                // the supplied error handler. A 3P observer always has an error\r\n                // handler.\r\n                observer.error(token.error);\r\n            }\r\n            else {\r\n                // If the token has no error field, always return the token.\r\n                // If this is a 2P listener, return the token, whether or not it\r\n                // has an error field.\r\n                observer.next(token);\r\n            }\r\n        }\r\n        catch (ignored) {\r\n            // Errors in the listener function itself are always ignored.\r\n        }\r\n    }\r\n}\r\nfunction isValid(token) {\r\n    return token.expireTimeMillis - Date.now() > 0;\r\n}\r\nfunction makeDummyTokenResult(error) {\r\n    return {\r\n        token: formatDummyToken(defaultTokenErrorData),\r\n        error: error\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param app\r\n * @param siteKeyOrProvider - optional custom attestation provider\r\n * or reCAPTCHA siteKey\r\n * @param isTokenAutoRefreshEnabled - if true, enables auto refresh\r\n * of appCheck token.\r\n */\r\nfunction activate(app, siteKeyOrProvider, isTokenAutoRefreshEnabled) {\r\n    var state = getState(app);\r\n    if (state.activated) {\r\n        throw ERROR_FACTORY.create(\"already-activated\" /* ALREADY_ACTIVATED */, {\r\n            appName: app.name\r\n        });\r\n    }\r\n    var newState = tslib.__assign(tslib.__assign({}, state), { activated: true });\r\n    if (typeof siteKeyOrProvider === 'string') {\r\n        newState.siteKey = siteKeyOrProvider;\r\n    }\r\n    else {\r\n        newState.customProvider = siteKeyOrProvider;\r\n    }\r\n    // Use value of global `automaticDataCollectionEnabled` (which\r\n    // itself defaults to false if not specified in config) if\r\n    // `isTokenAutoRefreshEnabled` param was not provided by user.\r\n    newState.isTokenAutoRefreshEnabled =\r\n        isTokenAutoRefreshEnabled === undefined\r\n            ? app.automaticDataCollectionEnabled\r\n            : isTokenAutoRefreshEnabled;\r\n    setState(app, newState);\r\n    // initialize reCAPTCHA if siteKey is provided\r\n    if (newState.siteKey) {\r\n        initialize(app, newState.siteKey).catch(function () {\r\n            /* we don't care about the initialization result in activate() */\r\n        });\r\n    }\r\n}\r\nfunction setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled) {\r\n    var state = getState(app);\r\n    // This will exist if any product libraries have called\r\n    // `addTokenListener()`\r\n    if (state.tokenRefresher) {\r\n        if (isTokenAutoRefreshEnabled === true) {\r\n            state.tokenRefresher.start();\r\n        }\r\n        else {\r\n            state.tokenRefresher.stop();\r\n        }\r\n    }\r\n    setState(app, tslib.__assign(tslib.__assign({}, state), { isTokenAutoRefreshEnabled: isTokenAutoRefreshEnabled }));\r\n}\r\n/**\r\n * Differs from internal getToken in that it throws the error.\r\n */\r\nfunction getToken(app, platformLoggerProvider, forceRefresh) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getToken$1(app, platformLoggerProvider, forceRefresh)];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                    return [2 /*return*/, { token: result.token }];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction onTokenChanged(app, platformLoggerProvider, onNextOrObserver, onError, \r\n/**\r\n * NOTE: Although an `onCompletion` callback can be provided, it will\r\n * never be called because the token stream is never-ending.\r\n * It is added only for API consistency with the observer pattern, which\r\n * we follow in JS APIs.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nonCompletion) {\r\n    var nextFn = function () { };\r\n    var errorFn = function () { };\r\n    if (onNextOrObserver.next != null) {\r\n        nextFn = onNextOrObserver.next.bind(onNextOrObserver);\r\n    }\r\n    else {\r\n        nextFn = onNextOrObserver;\r\n    }\r\n    if (onNextOrObserver.error != null) {\r\n        errorFn = onNextOrObserver.error.bind(onNextOrObserver);\r\n    }\r\n    else if (onError) {\r\n        errorFn = onError;\r\n    }\r\n    addTokenListener(app, platformLoggerProvider, \"EXTERNAL\" /* EXTERNAL */, nextFn, errorFn);\r\n    return function () { return removeTokenListener(app, nextFn); };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction factory(app, platformLoggerProvider) {\r\n    return {\r\n        app: app,\r\n        activate: function (siteKeyOrProvider, isTokenAutoRefreshEnabled) { return activate(app, siteKeyOrProvider, isTokenAutoRefreshEnabled); },\r\n        setTokenAutoRefreshEnabled: function (isTokenAutoRefreshEnabled) {\r\n            return setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled);\r\n        },\r\n        getToken: function (forceRefresh) {\r\n            return getToken(app, platformLoggerProvider, forceRefresh);\r\n        },\r\n        onTokenChanged: function (onNextOrObserver, onError, onCompletion) {\r\n            return onTokenChanged(app, platformLoggerProvider, \r\n            /**\r\n             * This can still be an observer. Need to do this casting because\r\n             * according to Typescript: \"Implementation signatures of overloads\r\n             * are not externally visible\"\r\n             */\r\n            onNextOrObserver, onError);\r\n        },\r\n        INTERNAL: {\r\n            delete: function () {\r\n                var tokenObservers = getState(app).tokenObservers;\r\n                for (var _i = 0, tokenObservers_1 = tokenObservers; _i < tokenObservers_1.length; _i++) {\r\n                    var tokenObserver = tokenObservers_1[_i];\r\n                    removeTokenListener(app, tokenObserver.next);\r\n                }\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction internalFactory(app, platformLoggerProvider) {\r\n    return {\r\n        getToken: function (forceRefresh) {\r\n            return getToken$1(app, platformLoggerProvider, forceRefresh);\r\n        },\r\n        addTokenListener: function (listener) {\r\n            return addTokenListener(app, platformLoggerProvider, \"INTERNAL\" /* INTERNAL */, listener);\r\n        },\r\n        removeTokenListener: function (listener) { return removeTokenListener(app, listener); }\r\n    };\r\n}\n\nvar name = \"@firebase/app-check\";\nvar version = \"0.2.0\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar APP_CHECK_NAME = 'appCheck';\r\nvar APP_CHECK_NAME_INTERNAL = 'app-check-internal';\r\nfunction registerAppCheck(firebase) {\r\n    // The public interface\r\n    firebase.INTERNAL.registerComponent(new component.Component(APP_CHECK_NAME, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        return factory(app, platformLoggerProvider);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        /**\r\n         * AppCheck can only be initialized by explicitly calling firebase.appCheck()\r\n         * We don't want firebase products that consume AppCheck to gate on AppCheck\r\n         * if the user doesn't intend them to, just because the AppCheck component\r\n         * is registered.\r\n         */\r\n        .setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */)\r\n        /**\r\n         * Because all firebase products that depend on app-check depend on app-check-internal directly,\r\n         * we need to initialize app-check-internal after app-check is initialized to make it\r\n         * available to other firebase products.\r\n         */\r\n        .setInstanceCreatedCallback(function (container, _instanceIdentifier, _instance) {\r\n        var appCheckInternalProvider = container.getProvider(APP_CHECK_NAME_INTERNAL);\r\n        appCheckInternalProvider.initialize();\r\n    }));\r\n    // The internal interface used by other Firebase products\r\n    firebase.INTERNAL.registerComponent(new component.Component(APP_CHECK_NAME_INTERNAL, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        return internalFactory(app, platformLoggerProvider);\r\n    }, \"PUBLIC\" /* PUBLIC */).setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */));\r\n    firebase.registerVersion(name, version);\r\n}\r\nregisterAppCheck(firebase__default['default']);\r\ninitializeDebugMode();\n"]},"metadata":{},"sourceType":"script"}